[
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 6 10 9)\n",
                    "10 - 4 = 6 (left: 6 5 6)\n",
                    "5 - 6 = -1 (left: -1 4 10)\n",
                    "4 * 6 = 24 (left: 24 5 10)\n",
                    "10 / 5 = 2 (left: 2 4 6)\n",
                    "4 - 10 = -6 (left: -6 5 6)\n",
                    "5 - 4 = 1 (left: 1 6 10)\n",
                    "10 - 5 = 5 (left: 5 4 6)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "4 - 10 = -6 (left: -6 5 6)\n",
                    "10 - 4 = 6 (left: 6 5 6)\n",
                    "5 - 6 = -1 (left: -1 4 10)\n",
                    "10 / 5 = 2 (left: 2 4 6)\n",
                    "5 - 4 = 1 (left: 1 6 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 6 10",
                "ys": [
                    "4 - 10 = -6 (left: -6 5 6)\n",
                    "10 - 4 = 6 (left: 6 5 6)\n",
                    "5 - 6 = -1 (left: -1 4 10)\n",
                    "10 / 5 = 2 (left: 2 4 6)\n",
                    "5 - 4 = 1 (left: 1 6 10)\n"
                ],
                "new_ys": [
                    [
                        "4 - 10 = -6 (left: -6 5 6)\n5 * 6 = 30 (left: 30 -6)\n30.0 + -6.0 = 24\n"
                    ],
                    [
                        "10 - 4 = 6 (left: 6 5 6)\n5 * 6 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                    ],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "4 - 10 = -6 (left: -6 5 6)\n5 * 6 = 30 (left: 30 -6)\n30.0 + -6.0 = 24\n"
                ]
            }
        ],
        "idx": 0,
        "correct_num": 1
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 4 2",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 4 2)\n",
                    "7 - 1 = 6 (left: 4 6 2)\n",
                    "2 * 7 = 14 (left: 14 1 4)\n",
                    "4 + 2 = 6 (left: 6 1 7)\n",
                    "1 * 4 = 4 (left: 4 7 2)\n",
                    "7 / 1 = 7 (left: 7 4 2)\n",
                    "1 - 4 = -3 (left: -3 7 2)\n",
                    "4 - 2 = 2 (left: 2 1 7)\n",
                    "7 - 4 = 3 (left: 3 1 2)\n",
                    "2 - 7 = -5 (left: -5 1 4)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.001,
                    20.0
                ],
                "select_new_ys": [
                    "1 - 4 = -3 (left: -3 7 2)\n",
                    "2 - 7 = -5 (left: -5 1 4)\n",
                    "1 + 7 = 8 (left: 8 4 2)\n",
                    "7 - 1 = 6 (left: 4 6 2)\n",
                    "2 * 7 = 14 (left: 14 1 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 4 2",
                "ys": [
                    "1 - 4 = -3 (left: -3 7 2)\n",
                    "2 - 7 = -5 (left: -5 1 4)\n",
                    "1 + 7 = 8 (left: 8 4 2)\n",
                    "7 - 1 = 6 (left: 4 6 2)\n",
                    "2 * 7 = 14 (left: 14 1 4)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "1 + 7 = 8 (left: 8 4 2)\n8 + 4 = 12 (left: 12 2)\n12.0 * 2.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "1 + 7 = 8 (left: 8 4 2)\n8 + 4 = 12 (left: 12 2)\n12.0 * 2.0 = 24\n"
                ]
            }
        ],
        "idx": 1,
        "correct_num": 2
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 2 11 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 2 = 7 (left: 7 11 8)\n",
                    "11 - 5 = 6 (left: 6 2 8)\n",
                    "8 + 5 = 13 (left: 13 2 11)\n",
                    "2 * 5 = 10 (left: 10 11 8)\n",
                    "5 - 2 = 3 (left: 3 11 8)\n",
                    "11 - 8 = 3 (left: 3 5 2)\n",
                    "8 - 5 = 3 (left: 3 2 11)\n",
                    "11 - 2 = 9 (left: 9 5 8)\n",
                    "8 - 2 = 6 (left: 6 5 11)\n",
                    "2 * 11 = 22 (left: 22 5 8)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 + 2 = 7 (left: 7 11 8)\n",
                    "11 - 5 = 6 (left: 6 2 8)\n",
                    "8 + 5 = 13 (left: 13 2 11)\n",
                    "2 * 5 = 10 (left: 10 11 8)\n",
                    "5 - 2 = 3 (left: 3 11 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 2 11 8",
                "ys": [
                    "5 + 2 = 7 (left: 7 11 8)\n",
                    "11 - 5 = 6 (left: 6 2 8)\n",
                    "8 + 5 = 13 (left: 13 2 11)\n",
                    "2 * 5 = 10 (left: 10 11 8)\n",
                    "5 - 2 = 3 (left: 3 11 8)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "11 - 5 = 6 (left: 6 2 8)\n8 * 6 = 48 (left: 48 2)\n48.0 / 2.0 = 24\n"
                    ],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "11 - 5 = 6 (left: 6 2 8)\n8 * 6 = 48 (left: 48 2)\n48.0 / 2.0 = 24\n"
                ]
            }
        ],
        "idx": 2,
        "correct_num": 3
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "9 8 7 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 + 8 = 17 (left: 7 6 17)\n",
                    "8 + 9 = 17 (left: 7 6 17)\n",
                    "9 - 8 = 1 (left: 7 6 1)\n",
                    "8 - 9 = -1 (left: -1 6 7)\n",
                    "7 + 6 = 13 (left: 13 9 8)\n",
                    "7 - 6 = 1 (left: 1 9 8)\n",
                    "6 - 7 = -1 (left: -1 9 8)\n",
                    "6 * 7 = 42 (left: 42 9 8)\n",
                    "9 - 7 = 2 (left: 2 8 6)\n",
                    "7 - 9 = -2 (left: -2 8 6)\n",
                    "6 - 9 = -3 (left: -3 8 7)\n",
                    "9 - 6 = 3 (left: 3 8 7)\n",
                    "6 - 9 = -3 (left: -3 8 7)\n",
                    "7 - 6 = 1 (left: 1 9 8)\n",
                    "6 - 7 = -1 (left: -1 9 8)\n",
                    "9 - 7 = 2 (left: 2 8 6)\n",
                    "7 - 9 = -2 (left: -2 8 6)\n",
                    "6 - 9 = -3 (left: -3 8 7)\n",
                    "9 - 6 = 3 (left: 3 8 7)\n",
                    "6 - 9 = -3 (left: -3 8 7)\n",
                    "7 - 6 = 1 (left: 1 9 8)\n",
                    "6 - 7 = -1 (left: -1 9 8)\n",
                    "9 - 7 = 2 (left: 2 8 6)\n",
                    "7 - 9 = -2 (left: -2 8 6)\n",
                    "6 - 9 = -3 (left: -3 8 7)\n",
                    "9 - 6 = 3 (left: 3 8 7)\n",
                    "6 - 9 = -3 (left: -3 8 7)\n",
                    "7 - 6 = 1 (left: 1 9 8)\n",
                    "6 - 7 = -1 (left: -1 9 8)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 9 = -1 (left: -1 6 7)\n",
                    "6 - 7 = -1 (left: -1 9 8)\n",
                    "7 - 9 = -2 (left: -2 8 6)\n",
                    "6 - 9 = -3 (left: -3 8 7)\n",
                    "9 + 8 = 17 (left: 7 6 17)\n"
                ]
            }
        ],
        "idx": 3,
        "correct_num": 3
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 11 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 11 = 12 (left: 12 11 13)\n",
                    "11 + 1 = 12 (left: 12 11 13)\n",
                    "11 * 1 = 11 (left: 11 11 13)\n",
                    "1 - 11 = -10 (left: -10 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n",
                    "13 + 1 = 14 (left: 11 11 14)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n",
                    "11 / 1 = 11 (left: 11 11 13)\n",
                    "11 * 11 = 121 (left: 121 1 13)\n",
                    "1 + 13 = 14 (left: 11 11 14)\n",
                    "1 * 13 = 13 (left: 11 11 13)\n",
                    "13 - 11 = 2 (left: 2 1 11)\n",
                    "11 - 13 = -2 (left: -2 1 11)\n",
                    "13 / 1 = 13 (left: 13 11 11)\n",
                    "13 - 11 = 2 (left: 2 1 11)\n",
                    "11 - 13 = -2 (left: -2 1 11)\n",
                    "13 + 11 = 24 (left: 24 1 11)\n",
                    "13 * 11 = 143 (left: 143 1 11)\n",
                    "1 + 11 = 12 (left: 11 13 12)\n",
                    "1 * 11 = 11 (left: 11 13 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n",
                    "1 - 11 = -10 (left: -10 11 13)\n",
                    "11 + 1 = 12 (left: 11 13 12)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n",
                    "13 - 11 = 2 (left: 2 1 11)\n",
                    "11 - 13 = -2 (left: -2 1 11)\n",
                    "13 / 1 = 13 (left: 13 11 11)\n",
                    "13 - 11 = 2 (left: 2 1 11)\n",
                    "11 - 13 = -2 (left: -2 1 11)\n",
                    "13 + 11 = 24 (left: 24 1 11)\n",
                    "13 * 11 = 143 (left: 143 1 11)\n",
                    "1 + 11 = 12 (left: 11 13 12)\n",
                    "1 * 11 = 11 (left: 11 13 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n",
                    "1 - 11 = -10 (left: -10 11 13)\n",
                    "11 + 1 = 12 (left: 11 13 12)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n",
                    "13 - 11 = 2 (left: 2 1 11)\n",
                    "11 - 13 = -2 (left: -2 1 11)\n",
                    "13 / 1 = 13 (left: 13 11 11)\n",
                    "13 - 11 = 2 (left: 2 1 11)\n",
                    "11 - 13 = -2 (left: -2 1 11)\n",
                    "13 + 11 = 24 (left: 24 1 11)\n",
                    "13 * 11 = 143 (left: 143 1 11)\n",
                    "1 + 11 = 12 (left: 11 13 12)\n",
                    "1 * 11 = 11 (left: 11 13 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n",
                    "1 - 11 = -10 (left: -10 11 13)\n",
                    "11 + 1 = 12 (left: 11 13 12)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n",
                    "13 - 11 = 2 (left: 2 1 11)\n",
                    "11 - 13 = -2 (left: -2 1 11)\n",
                    "13 / 1 = 13 (left: 13 11 11)\n",
                    "13 - 11 = 2 (left: 2 1 11)\n",
                    "11 - 13 = -2 (left: -2 1 11)\n",
                    "13 + 11 = 24 (left: 24 1 11)\n",
                    "13 * 11 = 143 (left: 143 1 11)\n",
                    "1 + 11 = 12 (left: 11 13 12)\n",
                    "1 * 11 = 11 (left: 11 13 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 - 11 = -10 (left: -10 11 13)\n",
                    "1 + 11 = 12 (left: 12 11 13)\n",
                    "11 + 1 = 12 (left: 12 11 13)\n",
                    "11 * 1 = 11 (left: 11 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 11 11 13",
                "ys": [
                    "1 - 11 = -10 (left: -10 11 13)\n",
                    "1 + 11 = 12 (left: 12 11 13)\n",
                    "11 + 1 = 12 (left: 12 11 13)\n",
                    "11 * 1 = 11 (left: 11 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "1 + 11 = 12 (left: 12 11 13)\n13 - 11 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "1 + 11 = 12 (left: 12 11 13)\n13 - 11 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                ]
            }
        ],
        "idx": 4,
        "correct_num": 4
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 11 10 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 11 = 12 (left: 12 10 8)\n",
                    "11 / 1 = 11 (left: 11 10 8)\n",
                    "10 + 1 = 11 (left: 11 11 8)\n",
                    "1 * 10 = 10 (left: 10 11 8)\n",
                    "10 - 1 = 9 (left: 9 11 8)\n",
                    "1 - 10 = -9 (left: -9 11 8)\n",
                    "8 - 1 = 7 (left: 7 11 10)\n",
                    "8 - 10 = -2 (left: -2 1 11)\n",
                    "10 - 8 = 2 (left: 2 1 11)\n",
                    "1 * 8 = 8 (left: 8 11 10)\n",
                    "1 + 8 = 9 (left: 9 11 10)\n",
                    "8 - 1 = 7 (left: 7 11 10)\n",
                    "1 - 8 = -7 (left: -7 11 10)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    20.0
                ],
                "select_new_ys": [
                    "1 - 10 = -9 (left: -9 11 8)\n",
                    "1 - 8 = -7 (left: -7 11 10)\n",
                    "1 + 11 = 12 (left: 12 10 8)\n",
                    "11 / 1 = 11 (left: 11 10 8)\n",
                    "10 + 1 = 11 (left: 11 11 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 11 10 8",
                "ys": [
                    "1 - 10 = -9 (left: -9 11 8)\n",
                    "1 - 8 = -7 (left: -7 11 10)\n",
                    "1 + 11 = 12 (left: 12 10 8)\n",
                    "11 / 1 = 11 (left: 11 10 8)\n",
                    "10 + 1 = 11 (left: 11 11 8)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "1 + 11 = 12 (left: 12 10 8)\n10 - 8 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "1 + 11 = 12 (left: 12 10 8)\n10 - 8 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                ]
            }
        ],
        "idx": 5,
        "correct_num": 5
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 9)\n",
                    "9 - 2 = 7 (left: 3 6 7)\n",
                    "6 - 3 = 3 (left: 3 2 9)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n",
                    "3 * 6 = 18 (left: 18 2 9)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n",
                    "2 + 6 = 8 (left: 8 3 9)\n",
                    "3 - 2 = 1 (left: 1 6 9)\n",
                    "9 - 3 = 6 (left: 6 2 6)\n",
                    "9 - 6 = 3 (left: 3 2 3)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0.001,
                    20.0,
                    0.001
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 3 6 7)\n",
                    "9 - 3 = 6 (left: 6 2 6)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n",
                    "3 * 6 = 18 (left: 18 2 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 9",
                "ys": [
                    "9 - 2 = 7 (left: 3 6 7)\n",
                    "9 - 3 = 6 (left: 6 2 6)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n",
                    "3 * 6 = 18 (left: 18 2 9)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "9 - 3 = 6 (left: 6 2 6)\n6 - 2 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                    ],
                    [
                        "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "9 - 3 = 6 (left: 6 2 6)\n6 - 2 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                ]
            }
        ],
        "idx": 6,
        "correct_num": 6
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 3 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 3 9)\n",
                    "5 * 1 = 5 (left: 3 5 9)\n",
                    "9 - 5 = 4 (left: 1 3 4)\n",
                    "3 + 1 = 4 (left: 4 5 9)\n",
                    "1 * 9 = 9 (left: 9 5 3)\n",
                    "1 - 3 = -2 (left: -2 5 9)\n",
                    "9 - 3 = 6 (left: 6 1 5)\n",
                    "3 * 9 = 27 (left: 27 1 5)\n",
                    "9 / 3 = 3 (left: 3 1 5)\n",
                    "3 - 1 = 2 (left: 2 5 9)\n",
                    "1 + 3 = 4 (left: 4 5 9)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 6 1 5)\n",
                    "5 * 1 = 5 (left: 3 5 9)\n",
                    "3 + 1 = 4 (left: 4 5 9)\n",
                    "1 * 9 = 9 (left: 9 5 3)\n",
                    "1 - 3 = -2 (left: -2 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 3 9",
                "ys": [
                    "9 - 3 = 6 (left: 6 1 5)\n",
                    "5 * 1 = 5 (left: 3 5 9)\n",
                    "3 + 1 = 4 (left: 4 5 9)\n",
                    "1 * 9 = 9 (left: 9 5 3)\n",
                    "1 - 3 = -2 (left: -2 5 9)\n"
                ],
                "new_ys": [
                    [
                        "9 - 3 = 6 (left: 6 1 5)\n5 - 1 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                    ],
                    [],
                    [],
                    [
                        "1 * 9 = 9 (left: 9 5 3)\n5 * 3 = 15 (left: 15 9)\n15.0 + 9.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "9 - 3 = 6 (left: 6 1 5)\n5 - 1 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                ]
            }
        ],
        "idx": 7,
        "correct_num": 7
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 7 12)\n",
                    "12 + 3 = 15 (left: 3 7 15)\n",
                    "3 * 3 = 9 (left: 9 7 12)\n",
                    "3 - 3 = 0 (left: 0 7 12)\n",
                    "7 - 3 = 4 (left: 4 3 12)\n",
                    "12 - 3 = 9 (left: 9 3 7)\n",
                    "12 / 3 = 4 (left: 4 3 7)\n",
                    "3 * 7 = 21 (left: 21 3 12)\n",
                    "3 - 7 = -4 (left: -4 3 12)\n",
                    "12 - 7 = 5 (left: 5 3 3)\n",
                    "7 - 12 = -5 (left: -5 3 3)\n",
                    "3 * 12 = 36 (left: 36 3 7)\n",
                    "3 - 12 = -9 (left: -9 3 7)\n",
                    "12 - 3 = 9 (left: 9 3 7)\n",
                    "7 - 3 = 4 (left: 4 3 12)\n",
                    "12 / 3 = 4 (left: 4 3 7)\n",
                    "3 * 7 = 21 (left: 21 3 12)\n",
                    "3 - 7 = -4 (left: -4 3 12)\n",
                    "12 - 7 = 5 (left: 5 3 3)\n",
                    "7 - 12 = -5 (left: -5 3 3)\n",
                    "3 * 12 = 36 (left: 36 3 7)\n",
                    "3 - 12 = -9 (left: -9 3 7)\n",
                    "12 - 3 = 9 (left: 9 3 7)\n",
                    "7 - 3 = 4 (left: 4 3 12)\n",
                    "12 / 3 = 4 (left: 4 3 7)\n",
                    "3 * 7 = 21 (left: 21 3 12)\n",
                    "3 - 7 = -4 (left: -4 3 12)\n",
                    "12 - 7 = 5 (left: 5 3 3)\n",
                    "7 - 12 = -5 (left: -5 3 3)\n",
                    "3 * 12 = 36 (left: 36 3 7)\n",
                    "3 - 12 = -9 (left: -9 3 7)\n",
                    "12 - 3 = 9 (left: 9 3 7)\n",
                    "7 - 3 = 4 (left: 4 3 12)\n",
                    "12 / 3 = 4 (left: 4 3 7)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    0.001,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    0.001,
                    0.001,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 + 3 = 15 (left: 3 7 15)\n",
                    "7 - 3 = 4 (left: 4 3 12)\n",
                    "3 - 7 = -4 (left: -4 3 12)\n",
                    "12 - 7 = 5 (left: 5 3 3)\n",
                    "3 - 12 = -9 (left: -9 3 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 7 12",
                "ys": [
                    "12 + 3 = 15 (left: 3 7 15)\n",
                    "7 - 3 = 4 (left: 4 3 12)\n",
                    "3 - 7 = -4 (left: -4 3 12)\n",
                    "12 - 7 = 5 (left: 5 3 3)\n",
                    "3 - 12 = -9 (left: -9 3 7)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "7 - 3 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 8 3)\n8.0 * 3.0 = 24\n"
                    ],
                    [],
                    [
                        "12 - 7 = 5 (left: 5 3 3)\n5 + 3 = 8 (left: 8 3)\n8.0 * 3.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 8 3)\n8.0 * 3.0 = 24\n"
                ]
            }
        ],
        "idx": 8,
        "correct_num": 8
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 9 7 9)\n",
                    "7 * 4 = 28 (left: 5 9 28)\n",
                    "9 - 4 = 5 (left: 5 5 7)\n",
                    "5 + 7 = 12 (left: 4 9 12)\n",
                    "4 * 9 = 36 (left: 36 5 7)\n",
                    "5 - 9 = -4 (left: -4 4 7)\n",
                    "9 - 5 = 4 (left: 4 4 7)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 - 9 = -4 (left: -4 4 7)\n",
                    "4 + 5 = 9 (left: 9 7 9)\n",
                    "9 - 4 = 5 (left: 5 5 7)\n",
                    "5 + 7 = 12 (left: 4 9 12)\n",
                    "4 * 9 = 36 (left: 36 5 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 9",
                "ys": [
                    "5 - 9 = -4 (left: -4 4 7)\n",
                    "4 + 5 = 9 (left: 9 7 9)\n",
                    "9 - 4 = 5 (left: 5 5 7)\n",
                    "5 + 7 = 12 (left: 4 9 12)\n",
                    "4 * 9 = 36 (left: 36 5 7)\n"
                ],
                "new_ys": [
                    [
                        "5 - 9 = -4 (left: -4 4 7)\n4 * 7 = 28 (left: 28 -4)\n28.0 + -4.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    [
                        "4 * 9 = 36 (left: 36 5 7)\n5 + 7 = 12 (left: 12 36)\n36.0 - 12.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "5 - 9 = -4 (left: -4 4 7)\n4 * 7 = 28 (left: 28 -4)\n28.0 + -4.0 = 24\n"
                ]
            }
        ],
        "idx": 9,
        "correct_num": 9
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 8 13)\n",
                    "2 + 8 = 10 (left: 1 10 13)\n",
                    "8 + 1 = 9 (left: 2 9 13)\n",
                    "1 * 2 = 2 (left: 2 8 13)\n",
                    "2 * 8 = 16 (left: 16 1 13)\n",
                    "8 - 2 = 6 (left: 1 6 13)\n",
                    "2 - 8 = -6 (left: -6 1 13)\n",
                    "13 - 1 = 12 (left: 12 2 8)\n",
                    "1 - 13 = -12 (left: -12 2 8)\n",
                    "13 / 1 = 13 (left: 13 2 8)\n",
                    "13 - 2 = 11 (left: 11 1 8)\n",
                    "1 * 13 = 13 (left: 13 2 8)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 3 8 13)\n",
                    "2 + 8 = 10 (left: 1 10 13)\n",
                    "1 - 13 = -12 (left: -12 2 8)\n",
                    "8 + 1 = 9 (left: 2 9 13)\n",
                    "1 * 2 = 2 (left: 2 8 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 8 13",
                "ys": [
                    "1 + 2 = 3 (left: 3 8 13)\n",
                    "2 + 8 = 10 (left: 1 10 13)\n",
                    "1 - 13 = -12 (left: -12 2 8)\n",
                    "8 + 1 = 9 (left: 2 9 13)\n",
                    "1 * 2 = 2 (left: 2 8 13)\n"
                ],
                "new_ys": [
                    [
                        "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                    ],
                    [
                        "2 + 8 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                    ],
                    [],
                    [
                        "8 + 1 = 9 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                ]
            }
        ],
        "idx": 10,
        "correct_num": 10
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 6 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 10 6 9)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n",
                    "9 - 4 = 5 (left: 5 6 6)\n",
                    "4 - 6 = -2 (left: -2 6 9)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "4 - 6 = -2 (left: -2 6 9)\n",
                    "4 + 6 = 10 (left: 10 6 9)\n",
                    "9 - 4 = 5 (left: 5 6 6)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 6 6 9",
                "ys": [
                    "4 - 6 = -2 (left: -2 6 9)\n",
                    "4 + 6 = 10 (left: 10 6 9)\n",
                    "9 - 4 = 5 (left: 5 6 6)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n"
                ],
                "new_ys": [
                    [
                        "4 - 6 = -2 (left: -2 6 9)\n-2 * 9 = -18 (left: -18 6)\n6.0 - -18.0 = 24\n"
                    ],
                    [],
                    [
                        "9 - 4 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "4 - 6 = -2 (left: -2 6 9)\n-2 * 9 = -18 (left: -18 6)\n6.0 - -18.0 = 24\n"
                ]
            }
        ],
        "idx": 11,
        "correct_num": 11
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 8 4",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 4 = 5 (left: 5 8 4)\n",
                    "4 + 1 = 5 (left: 5 8 4)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n",
                    "4 * 1 = 4 (left: 4 8 4)\n",
                    "1 - 4 = -3 (left: -3 8 4)\n",
                    "4 - 1 = 3 (left: 3 8 4)\n",
                    "8 - 4 = 4 (left: 4 1 4)\n",
                    "4 - 8 = -4 (left: -4 1 4)\n",
                    "4 / 1 = 4 (left: 4 8 4)\n",
                    "8 / 1 = 8 (left: 8 4 4)\n",
                    "1 * 4 = 4 (left: 4 8 4)\n",
                    "4 * 8 = 32 (left: 32 1 4)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 - 4 = -3 (left: -3 8 4)\n",
                    "8 / 1 = 8 (left: 8 4 4)\n",
                    "1 + 4 = 5 (left: 5 8 4)\n",
                    "4 + 1 = 5 (left: 5 8 4)\n",
                    "4 * 1 = 4 (left: 4 8 4)\n"
                ]
            }
        ],
        "idx": 12,
        "correct_num": 11
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "11 1 10 5",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 + 1 = 12 (left: 12 10 5)\n",
                    "10 / 1 = 10 (left: 10 11 5)\n",
                    "5 + 11 = 16 (left: 1 10 16)\n",
                    "11 * 1 = 11 (left: 11 10 5)\n",
                    "1 + 10 = 11 (left: 11 11 5)\n",
                    "1 - 10 = -9 (left: -9 11 5)\n",
                    "11 - 1 = 10 (left: 10 10 5)\n",
                    "10 - 1 = 9 (left: 9 11 5)\n",
                    "11 / 1 = 11 (left: 11 10 5)\n",
                    "1 - 11 = -10 (left: -10 10 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    20.0,
                    0.001,
                    0.001,
                    1.0,
                    20.0,
                    0.001
                ],
                "select_new_ys": [
                    "1 - 10 = -9 (left: -9 11 5)\n",
                    "1 - 11 = -10 (left: -10 10 5)\n",
                    "11 + 1 = 12 (left: 12 10 5)\n",
                    "10 / 1 = 10 (left: 10 11 5)\n",
                    "11 * 1 = 11 (left: 11 10 5)\n"
                ]
            }
        ],
        "idx": 13,
        "correct_num": 11
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 11)\n",
                    "6 / 3 = 2 (left: 2 4 11)\n",
                    "11 - 4 = 7 (left: 7 3 6)\n",
                    "3 * 6 = 18 (left: 18 4 11)\n",
                    "4 - 3 = 1 (left: 1 6 11)\n",
                    "3 - 6 = -3 (left: -3 4 11)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.001,
                    20.0,
                    0.001,
                    20.0
                ],
                "select_new_ys": [
                    "3 * 6 = 18 (left: 18 4 11)\n",
                    "3 - 6 = -3 (left: -3 4 11)\n",
                    "3 + 4 = 7 (left: 6 7 11)\n",
                    "6 / 3 = 2 (left: 2 4 11)\n",
                    "11 - 4 = 7 (left: 7 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 11",
                "ys": [
                    "3 * 6 = 18 (left: 18 4 11)\n",
                    "3 - 6 = -3 (left: -3 4 11)\n",
                    "3 + 4 = 7 (left: 6 7 11)\n",
                    "6 / 3 = 2 (left: 2 4 11)\n",
                    "11 - 4 = 7 (left: 7 3 6)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 13 11)\n13.0 + 11.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 13 11)\n13.0 + 11.0 = 24\n"
                ]
            }
        ],
        "idx": 14,
        "correct_num": 12
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "8 4 2 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 + 4 = 12 (left: 12 2 9)\n",
                    "4 * 2 = 8 (left: 8 8 9)\n",
                    "9 + 8 = 17 (left: 17 4 2)\n",
                    "8 - 4 = 4 (left: 2 4 9)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n",
                    "2 - 9 = -7 (left: -7 4 8)\n",
                    "4 - 2 = 2 (left: 2 8 9)\n",
                    "8 - 4 = 4 (left: 4 2 9)\n",
                    "9 - 8 = 1 (left: 1 4 2)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n",
                    "2 - 4 = -2 (left: -2 8 9)\n",
                    "4 / 2 = 2 (left: 2 8 9)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 9 = 11 (left: 4 8 11)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n",
                    "2 - 9 = -7 (left: -7 4 8)\n",
                    "2 - 4 = -2 (left: -2 8 9)\n",
                    "4 * 2 = 8 (left: 8 8 9)\n"
                ]
            }
        ],
        "idx": 15,
        "correct_num": 12
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 5 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 4 = 5 (left: 5 5 13)\n",
                    "5 + 1 = 6 (left: 6 4 13)\n",
                    "13 - 5 = 8 (left: 8 1 4)\n",
                    "1 * 5 = 5 (left: 5 4 13)\n",
                    "13 / 1 = 13 (left: 13 4 5)\n",
                    "1 - 5 = -4 (left: -4 4 13)\n",
                    "5 - 1 = 4 (left: 4 4 13)\n",
                    "13 - 4 = 9 (left: 9 1 5)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 4 = 5 (left: 5 5 13)\n",
                    "5 + 1 = 6 (left: 6 4 13)\n",
                    "13 - 5 = 8 (left: 8 1 4)\n",
                    "1 * 5 = 5 (left: 5 4 13)\n",
                    "13 / 1 = 13 (left: 13 4 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 5 13",
                "ys": [
                    "1 + 4 = 5 (left: 5 5 13)\n",
                    "5 + 1 = 6 (left: 6 4 13)\n",
                    "13 - 5 = 8 (left: 8 1 4)\n",
                    "1 * 5 = 5 (left: 5 4 13)\n",
                    "13 / 1 = 13 (left: 13 4 5)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "13 - 5 = 8 (left: 8 1 4)\n4 - 1 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "13 - 5 = 8 (left: 8 1 4)\n4 - 1 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                ]
            }
        ],
        "idx": 16,
        "correct_num": 13
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 7 12)\n",
                    "7 + 2 = 9 (left: 2 9 12)\n",
                    "12 / 2 = 6 (left: 6 2 7)\n",
                    "2 * 7 = 14 (left: 14 2 12)\n",
                    "2 - 7 = -5 (left: -5 2 12)\n",
                    "7 - 2 = 5 (left: 5 2 12)\n",
                    "12 - 2 = 10 (left: 10 2 7)\n",
                    "2 - 12 = -10 (left: -10 2 7)\n",
                    "7 - 2 = 5 (left: 5 2 12)\n"
                ],
                "values": [
                    20.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 7 12)\n",
                    "2 - 12 = -10 (left: -10 2 7)\n",
                    "12 / 2 = 6 (left: 6 2 7)\n",
                    "2 * 7 = 14 (left: 14 2 12)\n",
                    "2 - 7 = -5 (left: -5 2 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 7 12",
                "ys": [
                    "2 + 2 = 4 (left: 4 7 12)\n",
                    "2 - 12 = -10 (left: -10 2 7)\n",
                    "12 / 2 = 6 (left: 6 2 7)\n",
                    "2 * 7 = 14 (left: 14 2 12)\n",
                    "2 - 7 = -5 (left: -5 2 12)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "2 * 7 = 14 (left: 14 2 12)\n12 - 2 = 10 (left: 10 14)\n10.0 + 14.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "2 * 7 = 14 (left: 14 2 12)\n12 - 2 = 10 (left: 10 14)\n10.0 + 14.0 = 24\n"
                ]
            }
        ],
        "idx": 17,
        "correct_num": 14
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 7)\n",
                    "3 * 3 = 9 (left: 9 6 7)\n",
                    "6 + 3 = 9 (left: 9 3 7)\n",
                    "3 - 6 = -3 (left: -3 3 7)\n",
                    "3 / 3 = 1 (left: 1 6 7)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n",
                    "6 * 3 = 18 (left: 18 3 7)\n",
                    "7 - 3 = 4 (left: 4 3 6)\n",
                    "7 / 3 = 2 (left: 2 3 6)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 - 3 = 4 (left: 4 3 6)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 / 3 = 2 (left: 2 3 6)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 - 3 = 4 (left: 4 3 6)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 / 3 = 2 (left: 2 3 6)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 - 3 = 4 (left: 4 3 6)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 / 3 = 2 (left: 2 3 6)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 7)\n",
                    "3 - 6 = -3 (left: -3 3 7)\n",
                    "3 * 3 = 9 (left: 9 6 7)\n",
                    "6 + 3 = 9 (left: 9 3 7)\n",
                    "3 / 3 = 1 (left: 1 6 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 7",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 7)\n",
                    "3 - 6 = -3 (left: -3 3 7)\n",
                    "3 * 3 = 9 (left: 9 6 7)\n",
                    "6 + 3 = 9 (left: 9 3 7)\n",
                    "3 / 3 = 1 (left: 1 6 7)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "3 - 6 = -3 (left: -3 3 7)\n3 * 7 = 21 (left: 21 -3)\n21.0 - -3.0 = 24\n"
                    ],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "3 - 6 = -3 (left: -3 3 7)\n3 * 7 = 21 (left: 21 -3)\n21.0 - -3.0 = 24\n"
                ]
            }
        ],
        "idx": 18,
        "correct_num": 15
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "9 5 13 1",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 + 5 = 14 (left: 14 13 1)\n",
                    "13 - 9 = 4 (left: 4 5 1)\n",
                    "9 - 13 = -4 (left: -4 5 1)\n",
                    "1 + 9 = 10 (left: 10 5 13)\n",
                    "5 * 9 = 45 (left: 45 13 1)\n",
                    "1 - 9 = -8 (left: -8 5 13)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0.001
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 5 1)\n",
                    "9 - 13 = -4 (left: -4 5 1)\n",
                    "1 + 9 = 10 (left: 10 5 13)\n",
                    "9 + 5 = 14 (left: 14 13 1)\n",
                    "5 * 9 = 45 (left: 45 13 1)\n"
                ]
            }
        ],
        "idx": 19,
        "correct_num": 15
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 13 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 11 13 7)\n",
                    "7 + 5 = 12 (left: 12 6 13)\n",
                    "6 - 5 = 1 (left: 1 13 7)\n",
                    "5 * 6 = 30 (left: 30 13 7)\n",
                    "13 - 6 = 7 (left: 7 5 7)\n",
                    "5 - 7 = -2 (left: -2 6 13)\n",
                    "13 - 5 = 8 (left: 8 6 7)\n",
                    "7 - 5 = 2 (left: 2 6 13)\n",
                    "7 * 13 = 91 (left: 91 5 6)\n",
                    "13 - 7 = 6 (left: 6 5 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.001,
                    0.001,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 - 7 = -2 (left: -2 6 13)\n",
                    "5 + 6 = 11 (left: 11 13 7)\n",
                    "7 + 5 = 12 (left: 12 6 13)\n",
                    "13 - 6 = 7 (left: 7 5 7)\n",
                    "13 - 5 = 8 (left: 8 6 7)\n"
                ]
            }
        ],
        "idx": 20,
        "correct_num": 15
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 5 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 5 10 13)\n",
                    "8 + 5 = 13 (left: 5 10 13)\n",
                    "10 + 5 = 15 (left: 5 8 15)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n",
                    "10 / 5 = 2 (left: 2 8 5)\n",
                    "5 - 8 = -3 (left: -3 5 10)\n",
                    "5 - 5 = 0 (left: 0 8 10)\n",
                    "10 - 5 = 5 (left: 5 8 5)\n",
                    "5 * 10 = 50 (left: 50 8 5)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.001,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 8 5)\n",
                    "5 * 10 = 50 (left: 50 8 5)\n",
                    "5 + 8 = 13 (left: 5 10 13)\n",
                    "8 + 5 = 13 (left: 5 10 13)\n",
                    "10 + 5 = 15 (left: 5 8 15)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 5 10",
                "ys": [
                    "10 / 5 = 2 (left: 2 8 5)\n",
                    "5 * 10 = 50 (left: 50 8 5)\n",
                    "5 + 8 = 13 (left: 5 10 13)\n",
                    "8 + 5 = 13 (left: 5 10 13)\n",
                    "10 + 5 = 15 (left: 5 8 15)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "10 + 5 = 15 (left: 5 8 15)\n8 * 15 = 120 (left: 120 5)\n120.0 / 5.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "10 + 5 = 15 (left: 5 8 15)\n8 * 15 = 120 (left: 120 5)\n120.0 / 5.0 = 24\n"
                ]
            }
        ],
        "idx": 21,
        "correct_num": 16
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 6 12)\n",
                    "4 + 2 = 6 (left: 6 6 12)\n",
                    "12 / 2 = 6 (left: 6 4 6)\n",
                    "2 * 4 = 8 (left: 8 6 12)\n",
                    "4 - 2 = 2 (left: 2 6 12)\n",
                    "2 * 12 = 24 (left: 24 4 6)\n",
                    "4 * 6 = 24 (left: 24 2 12)\n",
                    "2 + 12 = 14 (left: 14 4 6)\n",
                    "2 * 6 = 12 (left: 12 4 12)\n",
                    "6 - 2 = 4 (left: 4 4 12)\n",
                    "2 - 6 = -4 (left: -4 4 12)\n",
                    "12 - 4 = 8 (left: 8 2 6)\n",
                    "4 - 12 = -8 (left: -8 2 6)\n",
                    "2 - 4 = -2 (left: -2 6 12)\n",
                    "6 - 12 = -6 (left: -6 2 4)\n",
                    "12 - 2 = 10 (left: 10 4 6)\n",
                    "4 - 6 = -2 (left: -2 2 12)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    20.0,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 4 6)\n",
                    "2 * 4 = 8 (left: 8 6 12)\n",
                    "4 * 6 = 24 (left: 24 2 12)\n",
                    "2 + 12 = 14 (left: 14 4 6)\n",
                    "2 - 6 = -4 (left: -4 4 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 4 6)\n",
                    "2 * 4 = 8 (left: 8 6 12)\n",
                    "4 * 6 = 24 (left: 24 2 12)\n",
                    "2 + 12 = 14 (left: 14 4 6)\n",
                    "2 - 6 = -4 (left: -4 4 12)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "4 * 6 = 24 (left: 24 2 12)\n24 / 2 = 12 (left: 12 12)\n12.0 + 12.0 = 24\n"
                    ],
                    [
                        "2 + 12 = 14 (left: 14 4 6)\n14 + 4 = 18 (left: 18 6)\n18.0 + 6.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "4 * 6 = 24 (left: 24 2 12)\n24 / 2 = 12 (left: 12 12)\n12.0 + 12.0 = 24\n"
                ]
            }
        ],
        "idx": 22,
        "correct_num": 17
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 13 8 11)\n",
                    "8 + 6 = 14 (left: 14 7 11)\n",
                    "11 + 6 = 17 (left: 17 7 8)\n",
                    "7 + 8 = 15 (left: 15 6 11)\n",
                    "7 - 6 = 1 (left: 1 8 11)\n",
                    "6 - 7 = -1 (left: -1 8 11)\n",
                    "11 - 7 = 4 (left: 4 6 8)\n",
                    "7 - 8 = -1 (left: -1 6 11)\n",
                    "8 - 7 = 1 (left: 1 6 11)\n",
                    "7 * 8 = 56 (left: 56 6 11)\n",
                    "11 - 8 = 3 (left: 3 6 7)\n",
                    "8 - 7 = 1 (left: 1 6 11)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    0
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 4 6 8)\n",
                    "11 - 8 = 3 (left: 3 6 7)\n",
                    "6 + 7 = 13 (left: 13 8 11)\n",
                    "8 + 6 = 14 (left: 14 7 11)\n",
                    "11 + 6 = 17 (left: 17 7 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 8 11",
                "ys": [
                    "11 - 7 = 4 (left: 4 6 8)\n",
                    "11 - 8 = 3 (left: 3 6 7)\n",
                    "6 + 7 = 13 (left: 13 8 11)\n",
                    "8 + 6 = 14 (left: 14 7 11)\n",
                    "11 + 6 = 17 (left: 17 7 8)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "11 - 8 = 3 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                    ],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "11 - 8 = 3 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                ]
            }
        ],
        "idx": 23,
        "correct_num": 18
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 9 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 9 = 16 (left: 16 9 13)\n",
                    "13 + 7 = 20 (left: 9 9 20)\n",
                    "7 * 9 = 63 (left: 9 13 63)\n",
                    "9 - 7 = 2 (left: 2 9 13)\n",
                    "7 - 9 = -2 (left: -2 9 13)\n",
                    "13 - 9 = 4 (left: 4 7 9)\n",
                    "13 - 7 = 6 (left: 6 9 9)\n",
                    "7 * 13 = 91 (left: 9 9 91)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "7 - 9 = -2 (left: -2 9 13)\n",
                    "7 + 9 = 16 (left: 16 9 13)\n",
                    "13 + 7 = 20 (left: 9 9 20)\n",
                    "7 * 9 = 63 (left: 9 13 63)\n",
                    "9 - 7 = 2 (left: 2 9 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 9 9 13",
                "ys": [
                    "7 - 9 = -2 (left: -2 9 13)\n",
                    "7 + 9 = 16 (left: 16 9 13)\n",
                    "13 + 7 = 20 (left: 9 9 20)\n",
                    "7 * 9 = 63 (left: 9 13 63)\n",
                    "9 - 7 = 2 (left: 2 9 13)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "9 - 7 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "9 - 7 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                ]
            }
        ],
        "idx": 24,
        "correct_num": 19
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 6 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 6 = 9 (left: 9 9 12)\n",
                    "6 * 3 = 18 (left: 18 9 12)\n",
                    "9 + 3 = 12 (left: 12 6 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n",
                    "3 - 6 = -3 (left: -3 9 12)\n",
                    "6 - 3 = 3 (left: 3 9 12)\n",
                    "12 - 9 = 3 (left: 3 3 6)\n",
                    "9 - 3 = 6 (left: 6 6 12)\n",
                    "3 * 9 = 27 (left: 27 6 12)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "3 + 6 = 9 (left: 9 9 12)\n",
                    "6 * 3 = 18 (left: 18 9 12)\n",
                    "9 + 3 = 12 (left: 12 6 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n",
                    "3 - 6 = -3 (left: -3 9 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 6 9 12",
                "ys": [
                    "3 + 6 = 9 (left: 9 9 12)\n",
                    "6 * 3 = 18 (left: 18 9 12)\n",
                    "9 + 3 = 12 (left: 12 6 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n",
                    "3 - 6 = -3 (left: -3 9 12)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "6 * 3 = 18 (left: 18 9 12)\n18 / 9 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ],
                    [
                        "9 + 3 = 12 (left: 12 6 12)\n12 / 6 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ],
                    [],
                    [
                        "3 - 6 = -3 (left: -3 9 12)\n9 - -3 = 12 (left: 12 12)\n12.0 + 12.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "6 * 3 = 18 (left: 18 9 12)\n18 / 9 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                ]
            }
        ],
        "idx": 25,
        "correct_num": 20
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 9 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 15 12 13)\n",
                    "9 + 12 = 21 (left: 21 6 13)\n",
                    "13 - 6 = 7 (left: 7 9 12)\n",
                    "6 * 9 = 54 (left: 54 12 13)\n",
                    "13 - 9 = 4 (left: 4 6 12)\n",
                    "9 * 13 = 117 (left: 117 6 12)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "9 + 12 = 21 (left: 21 6 13)\n",
                    "6 + 9 = 15 (left: 15 12 13)\n",
                    "13 - 6 = 7 (left: 7 9 12)\n",
                    "6 * 9 = 54 (left: 54 12 13)\n",
                    "13 - 9 = 4 (left: 4 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 9 12 13",
                "ys": [
                    "9 + 12 = 21 (left: 21 6 13)\n",
                    "6 + 9 = 15 (left: 15 12 13)\n",
                    "13 - 6 = 7 (left: 7 9 12)\n",
                    "6 * 9 = 54 (left: 54 12 13)\n",
                    "13 - 9 = 4 (left: 4 6 12)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "13 - 9 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                ]
            }
        ],
        "idx": 26,
        "correct_num": 21
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 11 9 13)\n",
                    "7 * 4 = 28 (left: 28 9 13)\n",
                    "9 + 4 = 13 (left: 13 7 13)\n",
                    "7 - 4 = 3 (left: 3 9 13)\n",
                    "4 - 7 = -3 (left: -3 9 13)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n",
                    "7 - 9 = -2 (left: -2 4 13)\n",
                    "7 * 9 = 63 (left: 63 4 13)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0.001,
                    20.0,
                    0.001
                ],
                "select_new_ys": [
                    "4 - 7 = -3 (left: -3 9 13)\n",
                    "7 - 9 = -2 (left: -2 4 13)\n",
                    "4 + 7 = 11 (left: 11 9 13)\n",
                    "7 * 4 = 28 (left: 28 9 13)\n",
                    "9 + 4 = 13 (left: 13 7 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 9 13",
                "ys": [
                    "4 - 7 = -3 (left: -3 9 13)\n",
                    "7 - 9 = -2 (left: -2 4 13)\n",
                    "4 + 7 = 11 (left: 11 9 13)\n",
                    "7 * 4 = 28 (left: 28 9 13)\n",
                    "9 + 4 = 13 (left: 13 7 13)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "7 * 4 = 28 (left: 28 9 13)\n28 + 9 = 37 (left: 37 13)\n37.0 - 13.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "7 * 4 = 28 (left: 28 9 13)\n28 + 9 = 37 (left: 37 13)\n37.0 - 13.0 = 24\n"
                ]
            }
        ],
        "idx": 27,
        "correct_num": 22
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 6 7)\n",
                    "4 + 2 = 6 (left: 6 6 7)\n",
                    "6 + 2 = 8 (left: 8 4 7)\n",
                    "7 + 2 = 9 (left: 9 4 6)\n",
                    "2 * 4 = 8 (left: 8 6 7)\n",
                    "2 * 6 = 12 (left: 12 4 7)\n",
                    "2 * 7 = 14 (left: 14 4 6)\n",
                    "4 * 6 = 24 (left: 2 7 24)\n",
                    "7 - 2 = 5 (left: 5 4 6)\n",
                    "7 - 4 = 3 (left: 3 2 6)\n",
                    "7 - 6 = 1 (left: 1 2 4)\n",
                    "2 - 4 = -2 (left: -2 6 7)\n",
                    "2 - 6 = -4 (left: -4 4 7)\n",
                    "2 - 7 = -5 (left: -5 4 6)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 6 6 7)\n",
                    "4 + 2 = 6 (left: 6 6 7)\n",
                    "6 + 2 = 8 (left: 8 4 7)\n",
                    "2 * 6 = 12 (left: 12 4 7)\n",
                    "2 * 7 = 14 (left: 14 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 7",
                "ys": [
                    "2 + 4 = 6 (left: 6 6 7)\n",
                    "4 + 2 = 6 (left: 6 6 7)\n",
                    "6 + 2 = 8 (left: 8 4 7)\n",
                    "2 * 6 = 12 (left: 12 4 7)\n",
                    "2 * 7 = 14 (left: 14 4 6)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "2 * 7 = 14 (left: 14 4 6)\n14 + 4 = 18 (left: 18 6)\n18.0 + 6.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "2 * 7 = 14 (left: 14 4 6)\n14 + 4 = 18 (left: 18 6)\n18.0 + 6.0 = 24\n"
                ]
            }
        ],
        "idx": 28,
        "correct_num": 23
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 10 10 2",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 15 10 2)\n",
                    "10 / 5 = 2 (left: 2 10 2)\n",
                    "10 + 2 = 12 (left: 5 10 12)\n",
                    "10 - 2 = 8 (left: 5 8 10)\n",
                    "5 * 10 = 50 (left: 50 10 2)\n",
                    "10 - 5 = 5 (left: 5 10 2)\n",
                    "5 + 10 = 15 (left: 15 10 2)\n",
                    "10 / 5 = 2 (left: 2 10 2)\n",
                    "10 - 5 = 5 (left: 5 10 2)\n",
                    "5 * 2 = 10 (left: 10 10 10)\n",
                    "2 + 5 = 7 (left: 7 10 10)\n",
                    "5 - 2 = 3 (left: 3 10 10)\n",
                    "10 - 5 = 5 (left: 5 10 2)\n",
                    "5 - 2 = 3 (left: 3 10 10)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0,
                    0,
                    0,
                    0.001,
                    1.0,
                    0.001,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 2)\n",
                    "5 + 10 = 15 (left: 15 10 2)\n",
                    "10 + 2 = 12 (left: 5 10 12)\n",
                    "5 * 10 = 50 (left: 50 10 2)\n",
                    "10 - 5 = 5 (left: 5 10 2)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 10 10 2",
                "ys": [
                    "10 / 5 = 2 (left: 2 10 2)\n",
                    "5 + 10 = 15 (left: 15 10 2)\n",
                    "10 + 2 = 12 (left: 5 10 12)\n",
                    "5 * 10 = 50 (left: 50 10 2)\n",
                    "10 - 5 = 5 (left: 5 10 2)\n"
                ],
                "new_ys": [
                    [
                        "10 / 5 = 2 (left: 2 10 2)\n2 + 10 = 12 (left: 12 2)\n12.0 * 2.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 2)\n2 + 10 = 12 (left: 12 2)\n12.0 * 2.0 = 24\n"
                ]
            }
        ],
        "idx": 29,
        "correct_num": 24
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "12 6 7 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 + 6 = 18 (left: 6 7 18)\n",
                    "7 + 6 = 13 (left: 6 12 13)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n",
                    "6 * 7 = 42 (left: 42 12 6)\n",
                    "12 / 6 = 2 (left: 2 7 6)\n",
                    "6 - 6 = 0 (left: 0 12 7)\n",
                    "7 - 6 = 1 (left: 1 12 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    0.001,
                    0.001
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 6 7)\n",
                    "12 + 6 = 18 (left: 6 7 18)\n",
                    "7 + 6 = 13 (left: 6 12 13)\n",
                    "6 * 7 = 42 (left: 42 12 6)\n",
                    "12 / 6 = 2 (left: 2 7 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "12 6 7 6",
                "ys": [
                    "12 - 6 = 6 (left: 6 6 7)\n",
                    "12 + 6 = 18 (left: 6 7 18)\n",
                    "7 + 6 = 13 (left: 6 12 13)\n",
                    "6 * 7 = 42 (left: 42 12 6)\n",
                    "12 / 6 = 2 (left: 2 7 6)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "6 * 7 = 42 (left: 42 12 6)\n42 - 6 = 36 (left: 36 12)\n36.0 - 12.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "6 * 7 = 42 (left: 42 12 6)\n42 - 6 = 36 (left: 36 12)\n36.0 - 12.0 = 24\n"
                ]
            }
        ],
        "idx": 30,
        "correct_num": 25
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "9 11 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 + 11 = 20 (left: 6 9 20)\n",
                    "11 + 9 = 20 (left: 6 9 20)\n",
                    "6 + 9 = 15 (left: 9 11 15)\n",
                    "9 * 6 = 54 (left: 9 11 54)\n",
                    "11 - 9 = 2 (left: 2 6 9)\n",
                    "9 - 11 = -2 (left: -2 6 9)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "9 - 11 = -2 (left: -2 6 9)\n",
                    "9 + 11 = 20 (left: 6 9 20)\n",
                    "11 + 9 = 20 (left: 6 9 20)\n",
                    "6 + 9 = 15 (left: 9 11 15)\n",
                    "9 * 6 = 54 (left: 9 11 54)\n"
                ]
            },
            {
                "step": 1,
                "x": "9 11 6 9",
                "ys": [
                    "9 - 11 = -2 (left: -2 6 9)\n",
                    "9 + 11 = 20 (left: 6 9 20)\n",
                    "11 + 9 = 20 (left: 6 9 20)\n",
                    "6 + 9 = 15 (left: 9 11 15)\n",
                    "9 * 6 = 54 (left: 9 11 54)\n"
                ],
                "new_ys": [
                    [
                        "9 - 11 = -2 (left: -2 6 9)\n-2 * 9 = -18 (left: -18 6)\n6.0 - -18.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "9 - 11 = -2 (left: -2 6 9)\n-2 * 9 = -18 (left: -18 6)\n6.0 - -18.0 = 24\n"
                ]
            }
        ],
        "idx": 31,
        "correct_num": 26
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 13 11 12)\n",
                    "8 + 5 = 13 (left: 13 11 12)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n",
                    "11 + 5 = 16 (left: 16 8 12)\n",
                    "12 - 5 = 7 (left: 7 8 11)\n",
                    "5 * 11 = 55 (left: 55 8 12)\n",
                    "5 - 11 = -6 (left: -6 8 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n",
                    "8 * 11 = 88 (left: 88 5 12)\n",
                    "11 * 5 = 55 (left: 55 8 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    0.001,
                    20.0,
                    20.0,
                    1.0,
                    20.0,
                    0.001,
                    0
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 6 8 12)\n",
                    "11 + 5 = 16 (left: 16 8 12)\n",
                    "5 - 11 = -6 (left: -6 8 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n",
                    "8 * 11 = 88 (left: 88 5 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 11 12",
                "ys": [
                    "11 - 5 = 6 (left: 6 8 12)\n",
                    "11 + 5 = 16 (left: 16 8 12)\n",
                    "5 - 11 = -6 (left: -6 8 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n",
                    "8 * 11 = 88 (left: 88 5 12)\n"
                ],
                "new_ys": [
                    [
                        "11 - 5 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ],
                    [],
                    [
                        "5 - 11 = -6 (left: -6 8 12)\n-6 + 8 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "11 - 5 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                ]
            }
        ],
        "idx": 32,
        "correct_num": 27
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 8 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 11 8 10)\n",
                    "10 - 5 = 5 (left: 5 6 8)\n",
                    "5 * 8 = 40 (left: 40 6 10)\n",
                    "8 - 5 = 3 (left: 3 6 10)\n",
                    "5 - 8 = -3 (left: -3 6 10)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n",
                    "10 / 5 = 2 (left: 2 6 8)\n",
                    "5 + 10 = 15 (left: 15 6 8)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 - 8 = -3 (left: -3 6 10)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n",
                    "5 + 6 = 11 (left: 11 8 10)\n",
                    "10 - 5 = 5 (left: 5 6 8)\n",
                    "5 * 8 = 40 (left: 40 6 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 8 10",
                "ys": [
                    "5 - 8 = -3 (left: -3 6 10)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n",
                    "5 + 6 = 11 (left: 11 8 10)\n",
                    "10 - 5 = 5 (left: 5 6 8)\n",
                    "5 * 8 = 40 (left: 40 6 10)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "5 * 8 = 40 (left: 40 6 10)\n40 / 10 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "5 * 8 = 40 (left: 40 6 10)\n40 / 10 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                ]
            }
        ],
        "idx": 33,
        "correct_num": 28
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "12 6 13 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 + 6 = 18 (left: 18 13 11)\n",
                    "6 + 12 = 18 (left: 18 13 11)\n",
                    "13 + 6 = 19 (left: 19 12 11)\n",
                    "11 + 12 = 23 (left: 23 6 13)\n",
                    "12 / 6 = 2 (left: 2 11 13)\n",
                    "13 / 6 = 2 (left: 2 11 12)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n",
                    "11 - 12 = -1 (left: -1 6 13)\n",
                    "13 - 11 = 2 (left: 2 12 6)\n",
                    "11 - 13 = -2 (left: -2 12 6)\n",
                    "12 * 11 = 132 (left: 132 6 13)\n",
                    "11 * 12 = 132 (left: 132 6 13)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    20.0,
                    0.001,
                    0.001
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 11 13)\n",
                    "11 - 12 = -1 (left: -1 6 13)\n",
                    "13 - 11 = 2 (left: 2 12 6)\n",
                    "11 - 13 = -2 (left: -2 12 6)\n",
                    "12 + 6 = 18 (left: 18 13 11)\n"
                ]
            }
        ],
        "idx": 34,
        "correct_num": 28
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 8 8)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n",
                    "2 + 8 = 10 (left: 10 2 8)\n",
                    "2 * 8 = 16 (left: 16 2 8)\n",
                    "8 - 2 = 6 (left: 2 6 8)\n",
                    "2 - 8 = -6 (left: -6 2 8)\n",
                    "2 - 2 = 0 (left: 0 8 8)\n",
                    "8 / 2 = 4 (left: 4 2 8)\n",
                    "8 - 8 = 0 (left: 0 2 2)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0.001
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n",
                    "8 / 2 = 4 (left: 4 2 8)\n",
                    "2 + 2 = 4 (left: 4 8 8)\n",
                    "2 + 8 = 10 (left: 10 2 8)\n",
                    "2 * 8 = 16 (left: 16 2 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 8 8",
                "ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n",
                    "8 / 2 = 4 (left: 4 2 8)\n",
                    "2 + 2 = 4 (left: 4 8 8)\n",
                    "2 + 8 = 10 (left: 10 2 8)\n",
                    "2 * 8 = 16 (left: 16 2 8)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 32 8)\n32.0 - 8.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 32 8)\n32.0 - 8.0 = 24\n"
                ]
            }
        ],
        "idx": 35,
        "correct_num": 29
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "12 7 13 2",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 + 7 = 19 (left: 19 13 2)\n",
                    "2 + 13 = 15 (left: 15 12 7)\n",
                    "7 * 13 = 91 (left: 91 12 2)\n",
                    "13 - 2 = 11 (left: 11 12 7)\n",
                    "7 - 13 = -6 (left: -6 12 2)\n",
                    "13 - 7 = 6 (left: 6 12 2)\n",
                    "2 * 13 = 26 (left: 26 12 7)\n",
                    "7 - 2 = 5 (left: 5 12 13)\n",
                    "2 - 13 = -11 (left: -11 12 7)\n",
                    "13 - 7 = 6 (left: 6 12 2)\n",
                    "2 * 7 = 14 (left: 14 12 13)\n",
                    "7 - 13 = -6 (left: -6 12 2)\n",
                    "7 * 2 = 14 (left: 14 12 13)\n",
                    "2 - 7 = -5 (left: -5 12 13)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0,
                    1.0,
                    0,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "7 - 13 = -6 (left: -6 12 2)\n",
                    "2 - 13 = -11 (left: -11 12 7)\n",
                    "2 - 7 = -5 (left: -5 12 13)\n",
                    "12 + 7 = 19 (left: 19 13 2)\n",
                    "2 + 13 = 15 (left: 15 12 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "12 7 13 2",
                "ys": [
                    "7 - 13 = -6 (left: -6 12 2)\n",
                    "2 - 13 = -11 (left: -11 12 7)\n",
                    "2 - 7 = -5 (left: -5 12 13)\n",
                    "12 + 7 = 19 (left: 19 13 2)\n",
                    "2 + 13 = 15 (left: 15 12 7)\n"
                ],
                "new_ys": [
                    [
                        "7 - 13 = -6 (left: -6 12 2)\n-6 * 2 = -12 (left: -12 12)\n12.0 - -12.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "7 - 13 = -6 (left: -6 12 2)\n-6 * 2 = -12 (left: -12 12)\n12.0 - -12.0 = 24\n"
                ]
            }
        ],
        "idx": 36,
        "correct_num": 30
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 12)\n",
                    "6 + 2 = 8 (left: 8 8 12)\n",
                    "12 / 2 = 6 (left: 6 6 8)\n",
                    "2 * 6 = 12 (left: 12 8 12)\n",
                    "8 - 2 = 6 (left: 6 6 12)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n",
                    "12 - 8 = 4 (left: 2 4 6)\n",
                    "2 - 12 = -10 (left: -10 6 8)\n",
                    "6 - 2 = 4 (left: 4 8 12)\n",
                    "6 / 2 = 3 (left: 3 8 12)\n"
                ],
                "values": [
                    0.001,
                    0.001,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 6 8)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n",
                    "2 - 12 = -10 (left: -10 6 8)\n",
                    "6 - 2 = 4 (left: 4 8 12)\n",
                    "6 / 2 = 3 (left: 3 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 8 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 6 8)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n",
                    "2 - 12 = -10 (left: -10 6 8)\n",
                    "6 - 2 = 4 (left: 4 8 12)\n",
                    "6 / 2 = 3 (left: 3 8 12)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "6 - 2 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12.0 + 12.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "6 - 2 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12.0 + 12.0 = 24\n"
                ]
            }
        ],
        "idx": 37,
        "correct_num": 31
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 7 9 13)\n",
                    "9 - 3 = 6 (left: 6 4 13)\n",
                    "13 - 4 = 9 (left: 9 3 9)\n",
                    "4 * 3 = 12 (left: 12 9 13)\n",
                    "9 / 3 = 3 (left: 3 4 13)\n",
                    "9 - 4 = 5 (left: 5 3 13)\n",
                    "3 * 9 = 27 (left: 27 4 13)\n",
                    "13 - 9 = 4 (left: 4 3 4)\n",
                    "4 - 3 = 1 (left: 1 9 13)\n",
                    "9 - 3 = 6 (left: 6 4 13)\n",
                    "13 - 3 = 10 (left: 10 4 9)\n",
                    "3 * 13 = 39 (left: 39 4 9)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    0.001,
                    0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 3 13)\n",
                    "9 - 3 = 6 (left: 6 4 13)\n",
                    "13 - 4 = 9 (left: 9 3 9)\n",
                    "4 * 3 = 12 (left: 12 9 13)\n",
                    "9 / 3 = 3 (left: 3 4 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 9 13",
                "ys": [
                    "9 - 4 = 5 (left: 5 3 13)\n",
                    "9 - 3 = 6 (left: 6 4 13)\n",
                    "13 - 4 = 9 (left: 9 3 9)\n",
                    "4 * 3 = 12 (left: 12 9 13)\n",
                    "9 / 3 = 3 (left: 3 4 13)\n"
                ],
                "new_ys": [
                    [
                        "9 - 4 = 5 (left: 5 3 13)\n13 - 5 = 8 (left: 8 3)\n8.0 * 3.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 3 13)\n13 - 5 = 8 (left: 8 3)\n8.0 * 3.0 = 24\n"
                ]
            }
        ],
        "idx": 38,
        "correct_num": 32
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 9 10 12)\n",
                    "12 + 4 = 16 (left: 5 10 16)\n",
                    "5 * 4 = 20 (left: 20 10 12)\n",
                    "12 - 5 = 7 (left: 7 4 10)\n",
                    "4 - 5 = -1 (left: -1 10 12)\n",
                    "10 - 4 = 6 (left: 6 5 12)\n",
                    "10 - 5 = 5 (left: 5 4 12)\n",
                    "5 - 10 = -5 (left: -5 4 12)\n",
                    "12 - 10 = 2 (left: 2 4 5)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 - 5 = 7 (left: 7 4 10)\n",
                    "10 - 4 = 6 (left: 6 5 12)\n",
                    "5 - 10 = -5 (left: -5 4 12)\n",
                    "12 + 4 = 16 (left: 5 10 16)\n",
                    "5 * 4 = 20 (left: 20 10 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 10 12",
                "ys": [
                    "12 - 5 = 7 (left: 7 4 10)\n",
                    "10 - 4 = 6 (left: 6 5 12)\n",
                    "5 - 10 = -5 (left: -5 4 12)\n",
                    "12 + 4 = 16 (left: 5 10 16)\n",
                    "5 * 4 = 20 (left: 20 10 12)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "5 * 4 = 20 (left: 20 10 12)\n20 * 12 = 240 (left: 240 10)\n240.0 / 10.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "5 * 4 = 20 (left: 20 10 12)\n20 * 12 = 240 (left: 240 10)\n240.0 / 10.0 = 24\n"
                ]
            }
        ],
        "idx": 39,
        "correct_num": 33
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 7 11)\n",
                    "7 / 1 = 7 (left: 7 2 11)\n",
                    "11 + 1 = 12 (left: 2 7 12)\n",
                    "2 * 7 = 14 (left: 14 1 11)\n",
                    "1 - 2 = -1 (left: -1 7 11)\n",
                    "7 - 1 = 6 (left: 6 2 11)\n",
                    "11 - 7 = 4 (left: 4 1 2)\n",
                    "11 / 1 = 11 (left: 11 2 7)\n",
                    "1 * 11 = 11 (left: 11 2 7)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 3 7 11)\n",
                    "1 - 2 = -1 (left: -1 7 11)\n",
                    "7 / 1 = 7 (left: 7 2 11)\n",
                    "11 + 1 = 12 (left: 2 7 12)\n",
                    "2 * 7 = 14 (left: 14 1 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 7 11",
                "ys": [
                    "1 + 2 = 3 (left: 3 7 11)\n",
                    "1 - 2 = -1 (left: -1 7 11)\n",
                    "7 / 1 = 7 (left: 7 2 11)\n",
                    "11 + 1 = 12 (left: 2 7 12)\n",
                    "2 * 7 = 14 (left: 14 1 11)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "2 * 7 = 14 (left: 14 1 11)\n11 - 1 = 10 (left: 10 14)\n10.0 + 14.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "2 * 7 = 14 (left: 14 1 11)\n11 - 1 = 10 (left: 10 14)\n10.0 + 14.0 = 24\n"
                ]
            }
        ],
        "idx": 40,
        "correct_num": 34
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 9 6 8)\n",
                    "5 + 6 = 11 (left: 11 4 8)\n",
                    "8 + 4 = 12 (left: 12 5 6)\n",
                    "4 * 6 = 24 (left: 5 8 24)\n",
                    "5 * 8 = 40 (left: 40 4 6)\n",
                    "4 - 5 = -1 (left: -1 6 8)\n",
                    "5 - 4 = 1 (left: 1 6 8)\n",
                    "8 - 5 = 3 (left: 3 4 6)\n",
                    "5 - 8 = -3 (left: -3 4 6)\n",
                    "8 - 4 = 4 (left: 4 5 6)\n",
                    "4 - 8 = -4 (left: -4 5 6)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n",
                    "5 - 6 = -1 (left: -1 4 8)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n",
                    "4 - 6 = -2 (left: -2 5 8)\n",
                    "8 - 6 = 2 (left: 2 4 5)\n",
                    "6 - 8 = -2 (left: -2 4 5)\n",
                    "6 * 4 = 24 (left: 24 5 8)\n",
                    "4 * 6 = 24 (left: 24 5 8)\n",
                    "6 * 8 = 48 (left: 48 4 5)\n",
                    "4 * 8 = 32 (left: 32 5 6)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    20.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    20.0,
                    1.0,
                    20.0,
                    0.001,
                    0.001,
                    0.001,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "8 + 4 = 12 (left: 12 5 6)\n",
                    "5 - 8 = -3 (left: -3 4 6)\n",
                    "4 - 8 = -4 (left: -4 5 6)\n",
                    "5 - 6 = -1 (left: -1 4 8)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 6 8",
                "ys": [
                    "8 + 4 = 12 (left: 12 5 6)\n",
                    "5 - 8 = -3 (left: -3 4 6)\n",
                    "4 - 8 = -4 (left: -4 5 6)\n",
                    "5 - 6 = -1 (left: -1 4 8)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "5 - 6 = -1 (left: -1 4 8)\n-1 + 4 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "5 - 6 = -1 (left: -1 4 8)\n-1 + 4 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                ]
            }
        ],
        "idx": 41,
        "correct_num": 35
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "10 6 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 + 6 = 16 (left: 16 12 13)\n",
                    "12 / 6 = 2 (left: 2 10 13)\n",
                    "13 + 10 = 23 (left: 23 6 12)\n",
                    "10 - 12 = -2 (left: -2 6 13)\n",
                    "6 * 13 = 78 (left: 78 10 12)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n",
                    "6 - 10 = -4 (left: -4 12 13)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0.001,
                    1.0,
                    1.0,
                    20.0,
                    0.001
                ],
                "select_new_ys": [
                    "10 - 12 = -2 (left: -2 6 13)\n",
                    "6 - 10 = -4 (left: -4 12 13)\n",
                    "10 + 6 = 16 (left: 16 12 13)\n",
                    "12 / 6 = 2 (left: 2 10 13)\n",
                    "13 + 10 = 23 (left: 23 6 12)\n"
                ]
            }
        ],
        "idx": 42,
        "correct_num": 35
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "9 1 9 3",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 + 1 = 10 (left: 10 9 3)\n",
                    "9 * 1 = 9 (left: 9 3 9)\n",
                    "3 + 9 = 12 (left: 1 9 12)\n",
                    "1 + 9 = 10 (left: 10 9 3)\n",
                    "9 - 1 = 8 (left: 8 9 3)\n",
                    "9 - 3 = 6 (left: 6 1 9)\n",
                    "1 * 9 = 9 (left: 9 9 3)\n",
                    "3 * 9 = 27 (left: 27 1 9)\n",
                    "1 - 9 = -8 (left: -8 9 3)\n",
                    "3 - 1 = 2 (left: 2 9 9)\n",
                    "1 - 3 = -2 (left: -2 9 9)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "1 - 9 = -8 (left: -8 9 3)\n",
                    "1 - 3 = -2 (left: -2 9 9)\n",
                    "9 + 1 = 10 (left: 10 9 3)\n",
                    "9 * 1 = 9 (left: 9 3 9)\n",
                    "1 + 9 = 10 (left: 10 9 3)\n"
                ]
            }
        ],
        "idx": 43,
        "correct_num": 35
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 4 = 5 (left: 5 4 11)\n",
                    "4 * 1 = 4 (left: 4 4 11)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n",
                    "4 + 11 = 15 (left: 1 4 15)\n",
                    "1 * 4 = 4 (left: 4 4 11)\n",
                    "11 - 1 = 10 (left: 10 4 4)\n",
                    "4 - 11 = -7 (left: -7 1 4)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "1 + 4 = 5 (left: 5 4 11)\n",
                    "4 - 11 = -7 (left: -7 1 4)\n",
                    "4 * 1 = 4 (left: 4 4 11)\n",
                    "4 + 11 = 15 (left: 1 4 15)\n",
                    "1 * 4 = 4 (left: 4 4 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 4 11",
                "ys": [
                    "1 + 4 = 5 (left: 5 4 11)\n",
                    "4 - 11 = -7 (left: -7 1 4)\n",
                    "4 * 1 = 4 (left: 4 4 11)\n",
                    "4 + 11 = 15 (left: 1 4 15)\n",
                    "1 * 4 = 4 (left: 4 4 11)\n"
                ],
                "new_ys": [
                    [
                        "1 + 4 = 5 (left: 5 4 11)\n11 - 5 = 6 (left: 6 4)\n6.0 * 4.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "1 + 4 = 5 (left: 5 4 11)\n11 - 5 = 6 (left: 6 4)\n6.0 * 4.0 = 24\n"
                ]
            }
        ],
        "idx": 44,
        "correct_num": 36
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 9 10)\n",
                    "9 / 3 = 3 (left: 3 2 10)\n",
                    "10 + 2 = 12 (left: 12 3 9)\n",
                    "2 * 9 = 18 (left: 18 3 10)\n",
                    "3 * 10 = 30 (left: 30 2 9)\n",
                    "9 - 3 = 6 (left: 6 2 10)\n",
                    "10 - 3 = 7 (left: 7 2 9)\n",
                    "3 - 10 = -7 (left: -7 2 9)\n",
                    "9 - 2 = 7 (left: 7 3 10)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "10 + 2 = 12 (left: 12 3 9)\n",
                    "2 * 9 = 18 (left: 18 3 10)\n",
                    "2 + 3 = 5 (left: 5 9 10)\n",
                    "3 * 10 = 30 (left: 30 2 9)\n",
                    "9 - 3 = 6 (left: 6 2 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 9 10",
                "ys": [
                    "10 + 2 = 12 (left: 12 3 9)\n",
                    "2 * 9 = 18 (left: 18 3 10)\n",
                    "2 + 3 = 5 (left: 5 9 10)\n",
                    "3 * 10 = 30 (left: 30 2 9)\n",
                    "9 - 3 = 6 (left: 6 2 10)\n"
                ],
                "new_ys": [
                    [
                        "10 + 2 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 15 9)\n15.0 + 9.0 = 24\n"
                    ],
                    [],
                    [
                        "2 + 3 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14.0 + 10.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "10 + 2 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 15 9)\n15.0 + 9.0 = 24\n"
                ]
            }
        ],
        "idx": 45,
        "correct_num": 37
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 1 2 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 1 = 4 (left: 4 2 13)\n",
                    "1 + 3 = 4 (left: 4 2 13)\n",
                    "2 * 3 = 6 (left: 1 6 13)\n",
                    "13 + 2 = 15 (left: 15 3 1)\n",
                    "1 * 13 = 13 (left: 13 3 2)\n",
                    "1 - 2 = -1 (left: -1 3 13)\n",
                    "13 - 1 = 12 (left: 12 3 2)\n",
                    "2 - 1 = 1 (left: 1 3 13)\n",
                    "1 - 13 = -12 (left: -12 3 2)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    1.0,
                    0.001,
                    20.0
                ],
                "select_new_ys": [
                    "1 - 2 = -1 (left: -1 3 13)\n",
                    "1 - 13 = -12 (left: -12 3 2)\n",
                    "3 + 1 = 4 (left: 4 2 13)\n",
                    "1 + 3 = 4 (left: 4 2 13)\n",
                    "2 * 3 = 6 (left: 1 6 13)\n"
                ]
            }
        ],
        "idx": 46,
        "correct_num": 37
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 6 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 1 = 7 (left: 7 6 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n",
                    "6 / 1 = 6 (left: 6 6 6)\n",
                    "1 + 6 = 7 (left: 7 6 6)\n",
                    "1 * 6 = 6 (left: 6 6 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n",
                    "1 - 6 = -5 (left: -5 6 6)\n",
                    "6 - 6 = 0 (left: 1 0 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n",
                    "6 - 6 = 0 (left: 0 1 6)\n",
                    "1 * 6 = 6 (left: 6 6 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n",
                    "1 - 6 = -5 (left: -5 6 6)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    0.001,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    0.001,
                    0.001,
                    0.001,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 - 6 = -5 (left: -5 6 6)\n",
                    "6 + 1 = 7 (left: 7 6 6)\n",
                    "1 + 6 = 7 (left: 7 6 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 6 6 6",
                "ys": [
                    "1 - 6 = -5 (left: -5 6 6)\n",
                    "6 + 1 = 7 (left: 7 6 6)\n",
                    "1 + 6 = 7 (left: 7 6 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "6 - 1 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "6 - 1 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                ]
            }
        ],
        "idx": 47,
        "correct_num": 38
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 2 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 2 9)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n",
                    "9 - 1 = 8 (left: 8 2 2)\n",
                    "1 + 9 = 10 (left: 10 2 2)\n",
                    "2 - 1 = 1 (left: 1 2 9)\n",
                    "1 * 9 = 9 (left: 9 2 2)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (left: 1 4 9)\n",
                    "9 - 1 = 8 (left: 8 2 2)\n",
                    "1 + 9 = 10 (left: 10 2 2)\n",
                    "2 - 1 = 1 (left: 1 2 9)\n",
                    "1 + 2 = 3 (left: 3 2 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 2 9",
                "ys": [
                    "2 * 2 = 4 (left: 1 4 9)\n",
                    "9 - 1 = 8 (left: 8 2 2)\n",
                    "1 + 9 = 10 (left: 10 2 2)\n",
                    "2 - 1 = 1 (left: 1 2 9)\n",
                    "1 + 2 = 3 (left: 3 2 9)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "1 + 9 = 10 (left: 10 2 2)\n10 + 2 = 12 (left: 12 2)\n12.0 * 2.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 2 2)\n10 + 2 = 12 (left: 12 2)\n12.0 * 2.0 = 24\n"
                ]
            }
        ],
        "idx": 48,
        "correct_num": 39
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 6 11)\n",
                    "6 / 1 = 6 (left: 6 3 11)\n",
                    "11 + 1 = 12 (left: 3 6 12)\n",
                    "1 * 6 = 6 (left: 6 3 11)\n",
                    "3 - 1 = 2 (left: 2 6 11)\n",
                    "1 - 6 = -5 (left: -5 3 11)\n",
                    "6 - 3 = 3 (left: 3 1 11)\n",
                    "11 - 6 = 5 (left: 1 5 3)\n",
                    "11 / 1 = 11 (left: 11 3 6)\n",
                    "1 + 11 = 12 (left: 12 3 6)\n",
                    "3 * 11 = 33 (left: 33 1 6)\n",
                    "3 - 11 = -8 (left: -8 1 6)\n",
                    "11 - 3 = 8 (left: 8 1 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0.001,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 - 6 = -5 (left: -5 3 11)\n",
                    "3 - 11 = -8 (left: -8 1 6)\n",
                    "1 + 3 = 4 (left: 4 6 11)\n",
                    "6 / 1 = 6 (left: 6 3 11)\n",
                    "11 + 1 = 12 (left: 3 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 6 11",
                "ys": [
                    "1 - 6 = -5 (left: -5 3 11)\n",
                    "3 - 11 = -8 (left: -8 1 6)\n",
                    "1 + 3 = 4 (left: 4 6 11)\n",
                    "6 / 1 = 6 (left: 6 3 11)\n",
                    "11 + 1 = 12 (left: 3 6 12)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "11 + 1 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "11 + 1 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                ]
            }
        ],
        "idx": 49,
        "correct_num": 40
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "13 12 5 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 + 12 = 25 (left: 5 10 25)\n",
                    "10 + 5 = 15 (left: 15 13 12)\n",
                    "13 * 5 = 65 (left: 65 12 10)\n",
                    "5 - 10 = -5 (left: -5 13 12)\n",
                    "10 - 13 = -3 (left: -3 12 5)\n",
                    "13 - 5 = 8 (left: 8 12 10)\n",
                    "10 / 5 = 2 (left: 2 13 12)\n",
                    "13 - 10 = 3 (left: 3 12 5)\n",
                    "5 * 13 = 65 (left: 65 12 10)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.001,
                    20.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "5 - 10 = -5 (left: -5 13 12)\n",
                    "10 - 13 = -3 (left: -3 12 5)\n",
                    "13 - 5 = 8 (left: 8 12 10)\n",
                    "13 + 12 = 25 (left: 5 10 25)\n",
                    "10 + 5 = 15 (left: 15 13 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "13 12 5 10",
                "ys": [
                    "5 - 10 = -5 (left: -5 13 12)\n",
                    "10 - 13 = -3 (left: -3 12 5)\n",
                    "13 - 5 = 8 (left: 8 12 10)\n",
                    "13 + 12 = 25 (left: 5 10 25)\n",
                    "10 + 5 = 15 (left: 15 13 12)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "13 - 5 = 8 (left: 8 12 10)\n10 - 8 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "13 - 5 = 8 (left: 8 12 10)\n10 - 8 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                ]
            }
        ],
        "idx": 50,
        "correct_num": 41
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 6)\n",
                    "6 / 2 = 3 (left: 3 3 6)\n",
                    "6 - 2 = 4 (left: 4 3 6)\n",
                    "3 * 2 = 6 (left: 6 6 6)\n",
                    "2 + 6 = 8 (left: 8 3 6)\n",
                    "3 - 2 = 1 (left: 1 6 6)\n",
                    "2 - 6 = -4 (left: -4 3 6)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    1.0,
                    0.001,
                    20.0,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 3 6)\n",
                    "2 - 6 = -4 (left: -4 3 6)\n",
                    "2 + 3 = 5 (left: 5 6 6)\n",
                    "6 - 2 = 4 (left: 4 3 6)\n",
                    "3 - 2 = 1 (left: 1 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 6",
                "ys": [
                    "2 + 6 = 8 (left: 8 3 6)\n",
                    "2 - 6 = -4 (left: -4 3 6)\n",
                    "2 + 3 = 5 (left: 5 6 6)\n",
                    "6 - 2 = 4 (left: 4 3 6)\n",
                    "3 - 2 = 1 (left: 1 6 6)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "2 + 3 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                ]
            }
        ],
        "idx": 51,
        "correct_num": 42
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 10 12 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 10 = 17 (left: 6 12 17)\n",
                    "6 + 7 = 13 (left: 10 12 13)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n",
                    "12 - 10 = 2 (left: 2 7 6)\n",
                    "7 * 12 = 84 (left: 6 10 84)\n",
                    "10 - 12 = -2 (left: -2 7 6)\n",
                    "12 - 10 = 2 (left: 2 7 6)\n",
                    "7 - 10 = -3 (left: -3 12 6)\n",
                    "6 - 10 = -4 (left: -4 7 12)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n",
                    "7 - 12 = -5 (left: -5 6 10)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    0,
                    20.0,
                    20.0,
                    0,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 7 12)\n",
                    "7 * 12 = 84 (left: 6 10 84)\n",
                    "10 - 12 = -2 (left: -2 7 6)\n",
                    "7 - 10 = -3 (left: -3 12 6)\n",
                    "6 - 10 = -4 (left: -4 7 12)\n"
                ]
            }
        ],
        "idx": 52,
        "correct_num": 42
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 8 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 8 = 15 (left: 15 8 12)\n",
                    "12 + 7 = 19 (left: 8 8 19)\n",
                    "8 * 7 = 56 (left: 8 12 56)\n",
                    "8 - 7 = 1 (left: 1 8 12)\n",
                    "7 - 8 = -1 (left: -1 8 12)\n",
                    "12 - 8 = 4 (left: 4 7 8)\n",
                    "12 - 7 = 5 (left: 5 8 8)\n",
                    "7 * 12 = 84 (left: 84 8 8)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    20.0,
                    20.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "7 - 8 = -1 (left: -1 8 12)\n",
                    "12 - 8 = 4 (left: 4 7 8)\n",
                    "12 - 7 = 5 (left: 5 8 8)\n",
                    "7 + 8 = 15 (left: 15 8 12)\n",
                    "12 + 7 = 19 (left: 8 8 19)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 8 8 12",
                "ys": [
                    "7 - 8 = -1 (left: -1 8 12)\n",
                    "12 - 8 = 4 (left: 4 7 8)\n",
                    "12 - 7 = 5 (left: 5 8 8)\n",
                    "7 + 8 = 15 (left: 15 8 12)\n",
                    "12 + 7 = 19 (left: 8 8 19)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "12 - 8 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                    ],
                    [
                        "12 - 7 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                ]
            }
        ],
        "idx": 53,
        "correct_num": 43
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 8)\n",
                    "6 / 3 = 2 (left: 2 4 8)\n",
                    "8 - 4 = 4 (left: 4 3 6)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 4 8)\n",
                    "3 + 4 = 7 (left: 6 7 8)\n",
                    "8 - 4 = 4 (left: 4 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 8",
                "ys": [
                    "6 / 3 = 2 (left: 2 4 8)\n",
                    "3 + 4 = 7 (left: 6 7 8)\n",
                    "8 - 4 = 4 (left: 4 3 6)\n"
                ],
                "new_ys": [
                    [
                        "6 / 3 = 2 (left: 2 4 8)\n8 - 2 = 6 (left: 6 4)\n6.0 * 4.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 4 8)\n8 - 2 = 6 (left: 6 4)\n6.0 * 4.0 = 24\n"
                ]
            }
        ],
        "idx": 54,
        "correct_num": 44
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 9 11)\n",
                    "7 * 1 = 7 (left: 7 9 11)\n",
                    "11 - 1 = 10 (left: 10 7 9)\n",
                    "1 + 11 = 12 (left: 12 7 9)\n",
                    "7 - 1 = 6 (left: 6 9 11)\n",
                    "11 - 7 = 4 (left: 4 1 9)\n",
                    "1 * 7 = 7 (left: 7 9 11)\n",
                    "7 / 1 = 7 (left: 7 9 11)\n",
                    "1 - 7 = -6 (left: -6 9 11)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n",
                    "7 * 1 = 7 (left: 7 9 11)\n",
                    "1 + 7 = 8 (left: 8 9 11)\n",
                    "7 / 1 = 7 (left: 7 9 11)\n",
                    "1 - 7 = -6 (left: -6 9 11)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n",
                    "7 * 1 = 7 (left: 7 9 11)\n",
                    "1 + 7 = 8 (left: 8 9 11)\n",
                    "7 / 1 = 7 (left: 7 9 11)\n",
                    "1 - 7 = -6 (left: -6 9 11)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n",
                    "7 * 1 = 7 (left: 7 9 11)\n",
                    "1 + 7 = 8 (left: 8 9 11)\n",
                    "7 / 1 = 7 (left: 7 9 11)\n",
                    "1 - 7 = -6 (left: -6 9 11)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n",
                    "7 * 1 = 7 (left: 7 9 11)\n",
                    "1 + 7 = 8 (left: 8 9 11)\n",
                    "7 / 1 = 7 (left: 7 9 11)\n",
                    "1 - 7 = -6 (left: -6 9 11)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n",
                    "7 * 1 = 7 (left: 7 9 11)\n",
                    "1 + 7 = 8 (left: 8 9 11)\n",
                    "7 / 1 = 7 (left: 7 9 11)\n",
                    "1 - 7 = -6 (left: -6 9 11)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n",
                    "7 * 1 = 7 (left: 7 9 11)\n",
                    "1 + 7 = 8 (left: 8 9 11)\n",
                    "7 / 1 = 7 (left: 7 9 11)\n",
                    "1 - 7 = -6 (left: -6 9 11)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n",
                    "7 * 1 = 7 (left: 7 9 11)\n",
                    "1 + 7 = 8 (left: 8 9 11)\n",
                    "7 / 1 = 7 (left: 7 9 11)\n",
                    "1 - 7 = -6 (left: -6 9 11)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    20.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 * 1 = 7 (left: 7 9 11)\n",
                    "1 + 11 = 12 (left: 12 7 9)\n",
                    "1 * 7 = 7 (left: 7 9 11)\n",
                    "7 / 1 = 7 (left: 7 9 11)\n",
                    "1 - 7 = -6 (left: -6 9 11)\n"
                ]
            }
        ],
        "idx": 55,
        "correct_num": 44
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 13)\n",
                    "3 * 2 = 6 (left: 6 6 13)\n",
                    "6 + 2 = 8 (left: 3 8 13)\n",
                    "2 - 6 = -4 (left: -4 3 13)\n",
                    "3 - 2 = 1 (left: 1 6 13)\n",
                    "13 / 3 = 4 (left: 4 2 6)\n",
                    "13 - 3 = 10 (left: 10 2 6)\n",
                    "2 * 13 = 26 (left: 26 3 6)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 6 13)\n",
                    "3 * 2 = 6 (left: 6 6 13)\n",
                    "6 + 2 = 8 (left: 3 8 13)\n",
                    "2 - 6 = -4 (left: -4 3 13)\n",
                    "3 - 2 = 1 (left: 1 6 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 13",
                "ys": [
                    "2 + 3 = 5 (left: 5 6 13)\n",
                    "3 * 2 = 6 (left: 6 6 13)\n",
                    "6 + 2 = 8 (left: 3 8 13)\n",
                    "2 - 6 = -4 (left: -4 3 13)\n",
                    "3 - 2 = 1 (left: 1 6 13)\n"
                ],
                "new_ys": [
                    [
                        "2 + 3 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                    ],
                    [],
                    [
                        "6 + 2 = 8 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                ]
            }
        ],
        "idx": 56,
        "correct_num": 45
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 5 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 5 12)\n",
                    "2 * 2 = 4 (left: 4 5 12)\n",
                    "12 / 2 = 6 (left: 6 2 5)\n",
                    "2 + 5 = 7 (left: 7 2 12)\n",
                    "5 * 2 = 10 (left: 10 2 12)\n",
                    "12 - 2 = 10 (left: 10 2 5)\n",
                    "2 - 5 = -3 (left: -3 2 12)\n",
                    "12 - 5 = 7 (left: 7 2 2)\n",
                    "5 - 2 = 3 (left: 3 2 12)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 10 2 12)\n",
                    "2 - 5 = -3 (left: -3 2 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n",
                    "2 * 2 = 4 (left: 4 5 12)\n",
                    "12 / 2 = 6 (left: 6 2 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 5 12",
                "ys": [
                    "5 * 2 = 10 (left: 10 2 12)\n",
                    "2 - 5 = -3 (left: -3 2 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n",
                    "2 * 2 = 4 (left: 4 5 12)\n",
                    "12 / 2 = 6 (left: 6 2 5)\n"
                ],
                "new_ys": [
                    [
                        "5 * 2 = 10 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n12.0 + 12.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "5 * 2 = 10 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n12.0 + 12.0 = 24\n"
                ]
            }
        ],
        "idx": 57,
        "correct_num": 46
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 13)\n",
                    "6 + 2 = 8 (left: 8 8 13)\n",
                    "8 + 2 = 10 (left: 10 6 13)\n",
                    "6 * 2 = 12 (left: 12 8 13)\n",
                    "2 * 8 = 16 (left: 16 6 13)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n",
                    "2 - 8 = -6 (left: -6 6 13)\n",
                    "13 - 8 = 5 (left: 5 2 6)\n",
                    "13 - 2 = 11 (left: 11 6 8)\n",
                    "2 * 13 = 26 (left: 26 6 8)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 13)\n",
                    "6 + 2 = 8 (left: 8 8 13)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n",
                    "2 - 8 = -6 (left: -6 6 13)\n",
                    "8 + 2 = 10 (left: 10 6 13)\n"
                ]
            }
        ],
        "idx": 58,
        "correct_num": 46
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 8 13)\n",
                    "8 / 1 = 8 (left: 8 3 13)\n",
                    "13 + 1 = 14 (left: 3 8 14)\n",
                    "1 * 8 = 8 (left: 8 3 13)\n",
                    "3 - 1 = 2 (left: 2 8 13)\n",
                    "1 - 3 = -2 (left: -2 8 13)\n",
                    "8 - 1 = 7 (left: 7 3 13)\n",
                    "13 - 8 = 5 (left: 5 1 3)\n",
                    "1 * 13 = 13 (left: 13 3 8)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 4 8 13)\n",
                    "8 / 1 = 8 (left: 8 3 13)\n",
                    "1 * 8 = 8 (left: 8 3 13)\n",
                    "1 - 3 = -2 (left: -2 8 13)\n",
                    "8 - 1 = 7 (left: 7 3 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 8 13",
                "ys": [
                    "1 + 3 = 4 (left: 4 8 13)\n",
                    "8 / 1 = 8 (left: 8 3 13)\n",
                    "1 * 8 = 8 (left: 8 3 13)\n",
                    "1 - 3 = -2 (left: -2 8 13)\n",
                    "8 - 1 = 7 (left: 7 3 13)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "8 / 1 = 8 (left: 8 3 13)\n8 + 3 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                    ],
                    [
                        "1 * 8 = 8 (left: 8 3 13)\n8 + 3 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "8 / 1 = 8 (left: 8 3 13)\n8 + 3 = 11 (left: 11 13)\n11.0 + 13.0 = 24\n"
                ]
            }
        ],
        "idx": 59,
        "correct_num": 47
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "10 4 7 4",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 + 4 = 14 (left: 14 7 4)\n",
                    "7 + 4 = 11 (left: 11 10 4)\n",
                    "4 * 10 = 40 (left: 4 7 40)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n",
                    "4 - 7 = -3 (left: -3 10 4)\n",
                    "7 - 4 = 3 (left: 3 10 4)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "10 + 4 = 14 (left: 14 7 4)\n",
                    "4 * 10 = 40 (left: 4 7 40)\n",
                    "4 - 7 = -3 (left: -3 10 4)\n",
                    "7 + 4 = 11 (left: 11 10 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n"
                ]
            }
        ],
        "idx": 60,
        "correct_num": 47
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "10 13 1 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 + 13 = 23 (left: 1 7 23)\n",
                    "13 / 1 = 13 (left: 13 10 7)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n",
                    "1 * 13 = 13 (left: 13 10 7)\n",
                    "1 - 7 = -6 (left: -6 10 13)\n",
                    "7 - 1 = 6 (left: 6 10 13)\n",
                    "13 - 7 = 6 (left: 6 10 1)\n",
                    "1 + 7 = 8 (left: 8 10 13)\n",
                    "1 * 7 = 7 (left: 7 10 13)\n"
                ],
                "values": [
                    0.001,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "13 / 1 = 13 (left: 13 10 7)\n",
                    "1 * 13 = 13 (left: 13 10 7)\n",
                    "1 - 7 = -6 (left: -6 10 13)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n",
                    "7 - 1 = 6 (left: 6 10 13)\n"
                ]
            }
        ],
        "idx": 61,
        "correct_num": 47
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 10 13)\n",
                    "9 / 1 = 9 (left: 9 10 13)\n",
                    "13 + 1 = 14 (left: 14 9 10)\n",
                    "1 * 9 = 9 (left: 9 10 13)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n",
                    "1 - 9 = -8 (left: -8 10 13)\n",
                    "1 * 13 = 13 (left: 13 9 10)\n",
                    "9 - 13 = -4 (left: -4 1 10)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 - 9 = -8 (left: -8 10 13)\n",
                    "9 / 1 = 9 (left: 9 10 13)\n",
                    "13 + 1 = 14 (left: 14 9 10)\n",
                    "1 * 9 = 9 (left: 9 10 13)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 9 10 13",
                "ys": [
                    "1 - 9 = -8 (left: -8 10 13)\n",
                    "9 / 1 = 9 (left: 9 10 13)\n",
                    "13 + 1 = 14 (left: 14 9 10)\n",
                    "1 * 9 = 9 (left: 9 10 13)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n"
                ],
                "new_ys": [
                    [
                        "1 - 9 = -8 (left: -8 10 13)\n10 - 13 = -3 (left: -3 -8)\n-3.0 * -8.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "1 - 9 = -8 (left: -8 10 13)\n10 - 13 = -3 (left: -3 -8)\n-3.0 * -8.0 = 24\n"
                ]
            }
        ],
        "idx": 62,
        "correct_num": 48
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 4 11)\n",
                    "3 * 3 = 9 (left: 9 4 11)\n",
                    "4 + 3 = 7 (left: 3 7 11)\n",
                    "3 - 4 = -1 (left: -1 3 11)\n",
                    "3 / 3 = 1 (left: 1 4 11)\n",
                    "11 - 3 = 8 (left: 8 3 4)\n",
                    "3 + 11 = 14 (left: 14 3 4)\n",
                    "3 * 11 = 33 (left: 33 3 4)\n",
                    "4 - 3 = 1 (left: 1 3 11)\n",
                    "4 * 3 = 12 (left: 12 3 11)\n",
                    "11 - 4 = 7 (left: 7 3 3)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 9 4 11)\n",
                    "4 + 3 = 7 (left: 3 7 11)\n",
                    "3 + 3 = 6 (left: 6 4 11)\n",
                    "3 - 4 = -1 (left: -1 3 11)\n",
                    "3 / 3 = 1 (left: 1 4 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 4 11",
                "ys": [
                    "3 * 3 = 9 (left: 9 4 11)\n",
                    "4 + 3 = 7 (left: 3 7 11)\n",
                    "3 + 3 = 6 (left: 6 4 11)\n",
                    "3 - 4 = -1 (left: -1 3 11)\n",
                    "3 / 3 = 1 (left: 1 4 11)\n"
                ],
                "new_ys": [
                    [
                        "3 * 3 = 9 (left: 9 4 11)\n9 + 4 = 13 (left: 13 11)\n13.0 + 11.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "3 * 3 = 9 (left: 9 4 11)\n9 + 4 = 13 (left: 13 11)\n13.0 + 11.0 = 24\n"
                ]
            }
        ],
        "idx": 63,
        "correct_num": 49
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 7 5 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 7 = 9 (left: 5 7 9)\n",
                    "7 + 2 = 9 (left: 5 7 9)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 7 = 9 (left: 5 7 9)\n",
                    "7 + 2 = 9 (left: 5 7 9)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n"
                ]
            }
        ],
        "idx": 64,
        "correct_num": 49
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 12 10 13)\n",
                    "9 / 3 = 3 (left: 3 10 13)\n",
                    "13 + 3 = 16 (left: 9 10 16)\n",
                    "3 * 9 = 27 (left: 27 10 13)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n",
                    "3 - 9 = -6 (left: -6 10 13)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n",
                    "13 - 3 = 10 (left: 10 9 10)\n",
                    "3 * 13 = 39 (left: 39 9 10)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0.001,
                    1.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "3 - 9 = -6 (left: -6 10 13)\n",
                    "9 / 3 = 3 (left: 3 10 13)\n",
                    "13 + 3 = 16 (left: 9 10 16)\n",
                    "3 * 9 = 27 (left: 27 10 13)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 9 10 13",
                "ys": [
                    "3 - 9 = -6 (left: -6 10 13)\n",
                    "9 / 3 = 3 (left: 3 10 13)\n",
                    "13 + 3 = 16 (left: 9 10 16)\n",
                    "3 * 9 = 27 (left: 27 10 13)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "3 * 9 = 27 (left: 27 10 13)\n27 + 10 = 37 (left: 37 13)\n37.0 - 13.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "3 * 9 = 27 (left: 27 10 13)\n27 + 10 = 37 (left: 37 13)\n37.0 - 13.0 = 24\n"
                ]
            }
        ],
        "idx": 65,
        "correct_num": 50
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 4 7)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n",
                    "3 * 2 = 6 (left: 6 4 7)\n",
                    "4 - 3 = 1 (left: 1 2 7)\n",
                    "7 - 3 = 4 (left: 4 2 4)\n",
                    "4 * 2 = 8 (left: 8 3 7)\n",
                    "2 + 7 = 9 (left: 9 3 4)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 4 7)\n",
                    "7 - 3 = 4 (left: 4 2 4)\n",
                    "2 + 3 = 5 (left: 5 4 7)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n",
                    "4 - 3 = 1 (left: 1 2 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 7",
                "ys": [
                    "3 * 2 = 6 (left: 6 4 7)\n",
                    "7 - 3 = 4 (left: 4 2 4)\n",
                    "2 + 3 = 5 (left: 5 4 7)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n",
                    "4 - 3 = 1 (left: 1 2 7)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "7 - 3 = 4 (left: 4 2 4)\n4 + 2 = 6 (left: 6 4)\n6.0 * 4.0 = 24\n"
                    ],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 2 4)\n4 + 2 = 6 (left: 6 4)\n6.0 * 4.0 = 24\n"
                ]
            }
        ],
        "idx": 66,
        "correct_num": 51
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 8 8 12)\n",
                    "8 / 4 = 2 (left: 2 4 12)\n",
                    "12 + 4 = 16 (left: 4 8 16)\n",
                    "4 * 8 = 32 (left: 4 12 32)\n",
                    "4 - 8 = -4 (left: -4 4 12)\n",
                    "12 - 4 = 8 (left: 4 8 8)\n",
                    "12 / 4 = 3 (left: 3 4 8)\n",
                    "4 - 12 = -8 (left: -8 4 8)\n",
                    "12 - 8 = 4 (left: 4 4 4)\n",
                    "4 * 12 = 48 (left: 48 4 8)\n"
                ],
                "values": [
                    0.001,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    0.001,
                    20.0
                ],
                "select_new_ys": [
                    "8 / 4 = 2 (left: 2 4 12)\n",
                    "4 * 8 = 32 (left: 4 12 32)\n",
                    "4 - 8 = -4 (left: -4 4 12)\n",
                    "4 - 12 = -8 (left: -8 4 8)\n",
                    "4 * 12 = 48 (left: 48 4 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 8 12",
                "ys": [
                    "8 / 4 = 2 (left: 2 4 12)\n",
                    "4 * 8 = 32 (left: 4 12 32)\n",
                    "4 - 8 = -4 (left: -4 4 12)\n",
                    "4 - 12 = -8 (left: -8 4 8)\n",
                    "4 * 12 = 48 (left: 48 4 8)\n"
                ],
                "new_ys": [
                    [
                        "8 / 4 = 2 (left: 2 4 12)\n4 * 12 = 48 (left: 48 2)\n48.0 / 2.0 = 24\n"
                    ],
                    [
                        "4 * 8 = 32 (left: 4 12 32)\n12 - 4 = 8 (left: 8 32)\n32.0 - 8.0 = 24\n"
                    ],
                    [],
                    [],
                    [
                        "4 * 12 = 48 (left: 48 4 8)\n48 / 8 = 6 (left: 6 4)\n6.0 * 4.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "8 / 4 = 2 (left: 2 4 12)\n4 * 12 = 48 (left: 48 2)\n48.0 / 2.0 = 24\n"
                ]
            }
        ],
        "idx": 67,
        "correct_num": 52
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 2 10 1",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 2 = 8 (left: 8 10 1)\n",
                    "6 * 2 = 12 (left: 12 10 1)\n",
                    "2 + 10 = 12 (left: 12 6 1)\n",
                    "10 / 2 = 5 (left: 5 6 1)\n",
                    "1 + 10 = 11 (left: 11 6 2)\n",
                    "10 - 1 = 9 (left: 9 6 2)\n",
                    "1 * 10 = 10 (left: 10 6 2)\n",
                    "2 - 1 = 1 (left: 1 6 10)\n",
                    "10 - 2 = 8 (left: 8 6 1)\n",
                    "2 * 6 = 12 (left: 12 10 1)\n",
                    "2 + 6 = 8 (left: 8 10 1)\n",
                    "2 * 10 = 20 (left: 20 6 1)\n",
                    "2 + 10 = 12 (left: 12 6 1)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0
                ],
                "select_new_ys": [
                    "6 + 2 = 8 (left: 8 10 1)\n",
                    "6 * 2 = 12 (left: 12 10 1)\n",
                    "2 + 10 = 12 (left: 12 6 1)\n",
                    "10 / 2 = 5 (left: 5 6 1)\n",
                    "1 + 10 = 11 (left: 11 6 2)\n"
                ]
            }
        ],
        "idx": 68,
        "correct_num": 52
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "12 5 12 1",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 + 5 = 17 (left: 17 12 1)\n",
                    "5 + 12 = 17 (left: 17 12 1)\n",
                    "12 * 5 = 60 (left: 60 12 1)\n",
                    "1 + 12 = 13 (left: 13 5 12)\n",
                    "12 - 1 = 11 (left: 11 5 12)\n",
                    "1 - 12 = -11 (left: -11 5 12)\n",
                    "5 - 1 = 4 (left: 4 12 12)\n",
                    "12 - 5 = 7 (left: 7 12 1)\n",
                    "12 / 1 = 12 (left: 12 5 12)\n",
                    "12 - 12 = 0 (left: 0 5 1)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 - 12 = -11 (left: -11 5 12)\n",
                    "12 + 5 = 17 (left: 17 12 1)\n",
                    "5 + 12 = 17 (left: 17 12 1)\n",
                    "1 + 12 = 13 (left: 13 5 12)\n",
                    "12 - 1 = 11 (left: 11 5 12)\n"
                ]
            }
        ],
        "idx": 69,
        "correct_num": 52
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 5 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 5 8 12)\n",
                    "6 * 6 = 36 (left: 5 8 36)\n",
                    "8 + 5 = 13 (left: 13 6 6)\n",
                    "5 + 8 = 13 (left: 13 6 6)\n",
                    "5 - 6 = -1 (left: -1 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n",
                    "6 * 5 = 30 (left: 30 6 8)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "5 - 8 = -3 (left: -3 6 6)\n",
                    "6 - 8 = -2 (left: -2 5 6)\n",
                    "5 - 6 = -1 (left: -1 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "6 * 5 = 30 (left: 30 6 8)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n",
                    "5 - 8 = -3 (left: -3 6 6)\n",
                    "6 - 8 = -2 (left: -2 5 6)\n",
                    "5 - 6 = -1 (left: -1 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "6 * 5 = 30 (left: 30 6 8)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n",
                    "5 - 8 = -3 (left: -3 6 6)\n",
                    "6 - 8 = -2 (left: -2 5 6)\n",
                    "5 - 6 = -1 (left: -1 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "6 * 5 = 30 (left: 30 6 8)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n",
                    "5 - 8 = -3 (left: -3 6 6)\n",
                    "6 - 8 = -2 (left: -2 5 6)\n",
                    "5 - 6 = -1 (left: -1 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "6 * 5 = 30 (left: 30 6 8)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n",
                    "5 - 8 = -3 (left: -3 6 6)\n",
                    "6 - 8 = -2 (left: -2 5 6)\n",
                    "5 - 6 = -1 (left: -1 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    20.0,
                    20.0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 * 6 = 36 (left: 5 8 36)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "5 - 8 = -3 (left: -3 6 6)\n",
                    "6 - 8 = -2 (left: -2 5 6)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 5 8",
                "ys": [
                    "6 * 6 = 36 (left: 5 8 36)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "5 - 8 = -3 (left: -3 6 6)\n",
                    "6 - 8 = -2 (left: -2 5 6)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "5 - 8 = -3 (left: -3 6 6)\n-3 * 6 = -18 (left: -18 6)\n6.0 - -18.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "5 - 8 = -3 (left: -3 6 6)\n-3 * 6 = -18 (left: -18 6)\n6.0 - -18.0 = 24\n"
                ]
            }
        ],
        "idx": 70,
        "correct_num": 53
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 7 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 7 = 14 (left: 14 8 11)\n",
                    "7 * 7 = 49 (left: 8 11 49)\n",
                    "8 + 7 = 15 (left: 7 11 15)\n",
                    "7 - 8 = -1 (left: -1 7 11)\n",
                    "11 + 7 = 18 (left: 7 8 18)\n",
                    "7 / 7 = 1 (left: 1 8 11)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n",
                    "7 - 11 = -4 (left: -4 7 8)\n",
                    "8 - 7 = 1 (left: 1 7 11)\n",
                    "8 / 7 = 1 (left: 1 7 11)\n",
                    "8 - 7 = 1 (left: 1 7 11)\n",
                    "7 - 8 = -1 (left: -1 7 11)\n",
                    "7 * 8 = 56 (left: 56 7 11)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "7 * 7 = 49 (left: 8 11 49)\n",
                    "7 - 8 = -1 (left: -1 7 11)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n",
                    "7 - 11 = -4 (left: -4 7 8)\n",
                    "7 + 7 = 14 (left: 14 8 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 7 8 11",
                "ys": [
                    "7 * 7 = 49 (left: 8 11 49)\n",
                    "7 - 8 = -1 (left: -1 7 11)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n",
                    "7 - 11 = -4 (left: -4 7 8)\n",
                    "7 + 7 = 14 (left: 14 8 11)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "7 - 11 = -4 (left: -4 7 8)\n-4 + 7 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "7 - 11 = -4 (left: -4 7 8)\n-4 + 7 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                ]
            }
        ],
        "idx": 71,
        "correct_num": 54
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 7 10)\n",
                    "7 / 1 = 7 (left: 7 3 10)\n",
                    "10 + 1 = 11 (left: 3 7 11)\n",
                    "1 * 7 = 7 (left: 7 3 10)\n",
                    "7 - 1 = 6 (left: 6 3 10)\n",
                    "1 - 7 = -6 (left: -6 3 10)\n",
                    "7 - 3 = 4 (left: 4 1 10)\n",
                    "10 - 3 = 7 (left: 1 7 7)\n",
                    "1 * 10 = 10 (left: 10 3 7)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "10 + 1 = 11 (left: 3 7 11)\n",
                    "7 - 1 = 6 (left: 6 3 10)\n",
                    "1 - 7 = -6 (left: -6 3 10)\n",
                    "1 + 3 = 4 (left: 4 7 10)\n",
                    "7 / 1 = 7 (left: 7 3 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 7 10",
                "ys": [
                    "10 + 1 = 11 (left: 3 7 11)\n",
                    "7 - 1 = 6 (left: 6 3 10)\n",
                    "1 - 7 = -6 (left: -6 3 10)\n",
                    "1 + 3 = 4 (left: 4 7 10)\n",
                    "7 / 1 = 7 (left: 7 3 10)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "1 - 7 = -6 (left: -6 3 10)\n3 * 10 = 30 (left: 30 -6)\n30.0 + -6.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "1 - 7 = -6 (left: -6 3 10)\n3 * 10 = 30 (left: 30 -6)\n30.0 + -6.0 = 24\n"
                ]
            }
        ],
        "idx": 72,
        "correct_num": 55
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 9 12 3",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 12 12 3)\n",
                    "9 / 3 = 3 (left: 3 3 12)\n",
                    "12 + 3 = 15 (left: 3 9 15)\n",
                    "3 * 9 = 27 (left: 3 12 27)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n",
                    "3 - 9 = -6 (left: -6 3 12)\n",
                    "12 - 3 = 9 (left: 3 9 9)\n",
                    "3 * 12 = 36 (left: 3 9 36)\n",
                    "9 / 3 = 3 (left: 3 12 3)\n",
                    "3 + 12 = 15 (left: 15 9 3)\n"
                ],
                "values": [
                    0.001,
                    0.001,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "3 * 9 = 27 (left: 3 12 27)\n",
                    "3 - 9 = -6 (left: -6 3 12)\n",
                    "12 + 3 = 15 (left: 3 9 15)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n",
                    "12 - 3 = 9 (left: 3 9 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 9 12 3",
                "ys": [
                    "3 * 9 = 27 (left: 3 12 27)\n",
                    "3 - 9 = -6 (left: -6 3 12)\n",
                    "12 + 3 = 15 (left: 3 9 15)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n",
                    "12 - 3 = 9 (left: 3 9 9)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "9 - 3 = 6 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "9 - 3 = 6 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                ]
            }
        ],
        "idx": 73,
        "correct_num": 56
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 5 3 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 5 = 12 (left: 12 3 10)\n",
                    "5 * 3 = 15 (left: 15 7 10)\n",
                    "10 + 3 = 13 (left: 13 7 5)\n",
                    "7 - 3 = 4 (left: 4 5 10)\n",
                    "7 * 3 = 21 (left: 21 5 10)\n",
                    "10 - 7 = 3 (left: 3 5 3)\n",
                    "5 - 3 = 2 (left: 2 7 10)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 3 5 3)\n",
                    "7 + 5 = 12 (left: 12 3 10)\n",
                    "5 * 3 = 15 (left: 15 7 10)\n",
                    "10 + 3 = 13 (left: 13 7 5)\n",
                    "7 - 3 = 4 (left: 4 5 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 5 3 10",
                "ys": [
                    "10 - 7 = 3 (left: 3 5 3)\n",
                    "7 + 5 = 12 (left: 12 3 10)\n",
                    "5 * 3 = 15 (left: 15 7 10)\n",
                    "10 + 3 = 13 (left: 13 7 5)\n",
                    "7 - 3 = 4 (left: 4 5 10)\n"
                ],
                "new_ys": [
                    [
                        "10 - 7 = 3 (left: 3 5 3)\n3 + 5 = 8 (left: 8 3)\n8.0 * 3.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "10 - 7 = 3 (left: 3 5 3)\n3 + 5 = 8 (left: 8 3)\n8.0 * 3.0 = 24\n"
                ]
            }
        ],
        "idx": 74,
        "correct_num": 57
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 12 13 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 12 = 16 (left: 16 13 10)\n",
                    "12 + 4 = 16 (left: 16 13 10)\n",
                    "13 + 4 = 17 (left: 17 12 10)\n",
                    "10 + 12 = 22 (left: 22 4 13)\n",
                    "12 - 10 = 2 (left: 2 4 13)\n",
                    "10 - 12 = -2 (left: -2 4 13)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n",
                    "13 - 12 = 1 (left: 1 4 10)\n",
                    "10 - 4 = 6 (left: 6 12 13)\n",
                    "10 - 13 = -3 (left: -3 4 12)\n",
                    "12 - 13 = -1 (left: -1 4 10)\n",
                    "4 - 12 = -8 (left: -8 13 10)\n",
                    "4 - 10 = -6 (left: -6 12 13)\n"
                ],
                "values": [
                    0.001,
                    0.001,
                    20.0,
                    0.001,
                    0.001,
                    20.0,
                    20.0,
                    0.001,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "13 + 4 = 17 (left: 17 12 10)\n",
                    "10 - 12 = -2 (left: -2 4 13)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n",
                    "10 - 13 = -3 (left: -3 4 12)\n",
                    "4 - 12 = -8 (left: -8 13 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 12 13 10",
                "ys": [
                    "13 + 4 = 17 (left: 17 12 10)\n",
                    "10 - 12 = -2 (left: -2 4 13)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n",
                    "10 - 13 = -3 (left: -3 4 12)\n",
                    "4 - 12 = -8 (left: -8 13 10)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "4 - 12 = -8 (left: -8 13 10)\n10 - 13 = -3 (left: -3 -8)\n-3.0 * -8.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "4 - 12 = -8 (left: -8 13 10)\n10 - 13 = -3 (left: -3 -8)\n-3.0 * -8.0 = 24\n"
                ]
            }
        ],
        "idx": 75,
        "correct_num": 58
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "10 3 2 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 + 3 = 13 (left: 13 2 12)\n",
                    "3 * 2 = 6 (left: 6 10 12)\n",
                    "12 / 2 = 6 (left: 6 10 3)\n",
                    "2 + 12 = 14 (left: 14 10 3)\n",
                    "10 - 2 = 8 (left: 8 3 12)\n",
                    "12 - 10 = 2 (left: 2 3 2)\n",
                    "10 /  2 = 5 (left: 5 3 12)\n",
                    "2 * 10 = 20 (left: 20 3 12)\n",
                    "10 + 2 = 12 (left: 12 3 12)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    0.001,
                    0.001,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 10 12)\n",
                    "12 / 2 = 6 (left: 6 10 3)\n",
                    "10 /  2 = 5 (left: 5 3 12)\n",
                    "10 + 3 = 13 (left: 13 2 12)\n",
                    "2 + 12 = 14 (left: 14 10 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "10 3 2 12",
                "ys": [
                    "3 * 2 = 6 (left: 6 10 12)\n",
                    "12 / 2 = 6 (left: 6 10 3)\n",
                    "10 /  2 = 5 (left: 5 3 12)\n",
                    "10 + 3 = 13 (left: 13 2 12)\n",
                    "2 + 12 = 14 (left: 14 10 3)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "12 / 2 = 6 (left: 6 10 3)\n10 * 3 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                    ],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 10 3)\n10 * 3 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                ]
            }
        ],
        "idx": 76,
        "correct_num": 59
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 4 3 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 4 = 10 (left: 3 6 10)\n",
                    "4 + 6 = 10 (left: 3 10 6)\n",
                    "6 * 3 = 18 (left: 18 4 6)\n",
                    "3 + 6 = 9 (left: 9 4 6)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n",
                    "3 - 6 = -3 (left: -3 4 6)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n",
                    "4 - 6 = -2 (left: -2 3 6)\n",
                    "3 - 4 = -1 (left: -1 6 6)\n",
                    "3 * 4 = 12 (left: 12 6 6)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    0.001,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "4 + 6 = 10 (left: 3 10 6)\n",
                    "3 - 6 = -3 (left: -3 4 6)\n",
                    "4 - 6 = -2 (left: -2 3 6)\n",
                    "3 - 4 = -1 (left: -1 6 6)\n",
                    "3 * 4 = 12 (left: 12 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 4 3 6",
                "ys": [
                    "4 + 6 = 10 (left: 3 10 6)\n",
                    "3 - 6 = -3 (left: -3 4 6)\n",
                    "4 - 6 = -2 (left: -2 3 6)\n",
                    "3 - 4 = -1 (left: -1 6 6)\n",
                    "3 * 4 = 12 (left: 12 6 6)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "3 * 4 = 12 (left: 12 6 6)\n12 + 6 = 18 (left: 18 6)\n18.0 + 6.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "3 * 4 = 12 (left: 12 6 6)\n12 + 6 = 18 (left: 18 6)\n18.0 + 6.0 = 24\n"
                ]
            }
        ],
        "idx": 77,
        "correct_num": 60
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 8 8 13)\n",
                    "8 + 5 = 13 (left: 8 8 13)\n",
                    "5 * 8 = 40 (left: 8 8 40)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n",
                    "5 - 8 = -3 (left: -3 8 8)\n",
                    "8 - 8 = 0 (left: 0 5 8)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 + 8 = 13 (left: 8 8 13)\n",
                    "8 + 5 = 13 (left: 8 8 13)\n",
                    "5 - 8 = -3 (left: -3 8 8)\n",
                    "5 * 8 = 40 (left: 8 8 40)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 8 8",
                "ys": [
                    "5 + 8 = 13 (left: 8 8 13)\n",
                    "8 + 5 = 13 (left: 8 8 13)\n",
                    "5 - 8 = -3 (left: -3 8 8)\n",
                    "5 * 8 = 40 (left: 8 8 40)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "5 * 8 = 40 (left: 8 8 40)\n8 + 8 = 16 (left: 16 40)\n40.0 - 16.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "5 * 8 = 40 (left: 8 8 40)\n8 + 8 = 16 (left: 16 40)\n40.0 - 16.0 = 24\n"
                ]
            }
        ],
        "idx": 78,
        "correct_num": 61
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 8 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 14 8 12)\n",
                    "12 + 6 = 18 (left: 8 8 18)\n",
                    "6 * 8 = 48 (left: 8 12 48)\n",
                    "8 - 6 = 2 (left: 2 8 12)\n",
                    "6 - 8 = -2 (left: -2 8 12)\n",
                    "12 - 8 = 4 (left: 4 6 8)\n",
                    "12 / 6 = 2 (left: 2 8 8)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 + 6 = 18 (left: 8 8 18)\n",
                    "6 * 8 = 48 (left: 8 12 48)\n",
                    "6 - 8 = -2 (left: -2 8 12)\n",
                    "12 - 8 = 4 (left: 4 6 8)\n",
                    "6 + 8 = 14 (left: 14 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 8 8 12",
                "ys": [
                    "12 + 6 = 18 (left: 8 8 18)\n",
                    "6 * 8 = 48 (left: 8 12 48)\n",
                    "6 - 8 = -2 (left: -2 8 12)\n",
                    "12 - 8 = 4 (left: 4 6 8)\n",
                    "6 + 8 = 14 (left: 14 8 12)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "12 - 8 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                ]
            }
        ],
        "idx": 79,
        "correct_num": 62
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 4 9)\n",
                    "3 * 2 = 6 (left: 4 6 9)\n",
                    "9 - 3 = 6 (left: 2 4 6)\n",
                    "4 + 2 = 6 (left: 6 3 9)\n",
                    "2 * 4 = 8 (left: 8 3 9)\n",
                    "4 - 2 = 2 (left: 2 3 9)\n",
                    "9 - 4 = 5 (left: 5 2 3)\n",
                    "9 - 2 = 7 (left: 7 3 4)\n",
                    "2 * 9 = 18 (left: 18 3 4)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 4 9)\n",
                    "3 * 2 = 6 (left: 4 6 9)\n",
                    "9 - 3 = 6 (left: 2 4 6)\n",
                    "2 * 4 = 8 (left: 8 3 9)\n",
                    "4 - 2 = 2 (left: 2 3 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 9",
                "ys": [
                    "2 + 3 = 5 (left: 5 4 9)\n",
                    "3 * 2 = 6 (left: 4 6 9)\n",
                    "9 - 3 = 6 (left: 2 4 6)\n",
                    "2 * 4 = 8 (left: 8 3 9)\n",
                    "4 - 2 = 2 (left: 2 3 9)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "4 - 2 = 2 (left: 2 3 9)\n3 + 9 = 12 (left: 12 2)\n12.0 * 2.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 3 9)\n3 + 9 = 12 (left: 12 2)\n12.0 * 2.0 = 24\n"
                ]
            }
        ],
        "idx": 80,
        "correct_num": 63
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 2 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 2 = 8 (left: 8 7 11)\n",
                    "7 * 2 = 14 (left: 14 6 11)\n",
                    "11 + 6 = 17 (left: 2 7 17)\n",
                    "2 + 11 = 13 (left: 13 6 7)\n",
                    "11 - 2 = 9 (left: 9 6 7)\n",
                    "2 - 7 = -5 (left: -5 6 11)\n",
                    "11 - 7 = 4 (left: 4 6 2)\n",
                    "7 - 2 = 5 (left: 5 6 11)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "11 + 6 = 17 (left: 2 7 17)\n",
                    "2 - 7 = -5 (left: -5 6 11)\n",
                    "6 + 2 = 8 (left: 8 7 11)\n",
                    "7 * 2 = 14 (left: 14 6 11)\n",
                    "2 + 11 = 13 (left: 13 6 7)\n"
                ]
            }
        ],
        "idx": 81,
        "correct_num": 63
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 9 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 14 12 12)\n",
                    "12 + 5 = 17 (left: 17 9 12)\n",
                    "5 * 12 = 60 (left: 60 9 12)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "5 - 9 = -4 (left: -4 12 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    20.0,
                    1.0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "5 - 9 = -4 (left: -4 12 12)\n",
                    "5 + 9 = 14 (left: 14 12 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 9 12 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "5 - 12 = -7 (left: -7 9 12)\n",
                    "9 - 12 = -3 (left: -3 5 12)\n",
                    "5 - 9 = -4 (left: -4 12 12)\n",
                    "5 + 9 = 14 (left: 14 12 12)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "5 - 12 = -7 (left: -7 9 12)\n-7 + 9 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ],
                    [
                        "9 - 12 = -3 (left: -3 5 12)\n-3 + 5 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ],
                    [],
                    [
                        "5 + 9 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "5 - 12 = -7 (left: -7 9 12)\n-7 + 9 = 2 (left: 2 12)\n2.0 * 12.0 = 24\n"
                ]
            }
        ],
        "idx": 82,
        "correct_num": 64
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 5 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 5 6)\n",
                    "4 * 2 = 8 (left: 8 5 6)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n",
                    "2 + 6 = 8 (left: 8 4 5)\n",
                    "4 * 5 = 20 (left: 20 2 6)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n",
                    "2 * 5 = 10 (left: 10 4 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 6 5 6)\n",
                    "4 * 2 = 8 (left: 8 5 6)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n",
                    "2 + 6 = 8 (left: 8 4 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 5 6",
                "ys": [
                    "2 + 4 = 6 (left: 6 5 6)\n",
                    "4 * 2 = 8 (left: 8 5 6)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n",
                    "2 + 6 = 8 (left: 8 4 5)\n"
                ],
                "new_ys": [
                    [
                        "2 + 4 = 6 (left: 6 5 6)\n5 * 6 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                    ],
                    [],
                    [
                        "6 - 2 = 4 (left: 4 4 5)\n4 * 5 = 20 (left: 20 4)\n20.0 + 4.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "2 + 4 = 6 (left: 6 5 6)\n5 * 6 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                ]
            }
        ],
        "idx": 83,
        "correct_num": 65
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 10 8 13)\n",
                    "5 * 5 = 25 (left: 8 13 25)\n",
                    "8 + 5 = 13 (left: 13 5 13)\n",
                    "5 - 8 = -3 (left: -3 5 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n",
                    "5 - 13 = -8 (left: -8 5 8)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n",
                    "13 - 8 = 5 (left: 5 5 5)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    20.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 10 8 13)\n",
                    "5 - 8 = -3 (left: -3 5 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n",
                    "5 - 13 = -8 (left: -8 5 8)\n",
                    "5 * 5 = 25 (left: 8 13 25)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 8 13",
                "ys": [
                    "5 + 5 = 10 (left: 10 8 13)\n",
                    "5 - 8 = -3 (left: -3 5 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n",
                    "5 - 13 = -8 (left: -8 5 8)\n",
                    "5 * 5 = 25 (left: 8 13 25)\n"
                ],
                "new_ys": [
                    [
                        "5 + 5 = 10 (left: 10 8 13)\n13 - 10 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                    ],
                    [
                        "5 - 8 = -3 (left: -3 5 13)\n5 - 13 = -8 (left: -8 -3)\n-8.0 * -3.0 = 24\n"
                    ],
                    [
                        "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                    ],
                    [
                        "5 - 13 = -8 (left: -8 5 8)\n5 - 8 = -3 (left: -3 -8)\n-3.0 * -8.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "5 + 5 = 10 (left: 10 8 13)\n13 - 10 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                ]
            }
        ],
        "idx": 84,
        "correct_num": 66
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 2 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 2 10)\n",
                    "3 * 2 = 6 (left: 6 3 10)\n",
                    "3 - 2 = 1 (left: 1 3 10)\n",
                    "2 + 3 = 5 (left: 5 3 10)\n",
                    "10 - 3 = 7 (left: 7 3 2)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 3 10)\n",
                    "3 + 3 = 6 (left: 6 2 10)\n",
                    "3 - 2 = 1 (left: 1 3 10)\n",
                    "2 + 3 = 5 (left: 5 3 10)\n",
                    "10 - 3 = 7 (left: 7 3 2)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 2 10",
                "ys": [
                    "3 * 2 = 6 (left: 6 3 10)\n",
                    "3 + 3 = 6 (left: 6 2 10)\n",
                    "3 - 2 = 1 (left: 1 3 10)\n",
                    "2 + 3 = 5 (left: 5 3 10)\n",
                    "10 - 3 = 7 (left: 7 3 2)\n"
                ],
                "new_ys": [
                    [
                        "3 * 2 = 6 (left: 6 3 10)\n10 * 3 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                    ],
                    [],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 3 10)\n10 * 3 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                ]
            }
        ],
        "idx": 85,
        "correct_num": 67
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "12 3 8 4",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 + 3 = 15 (left: 15 8 4)\n",
                    "8 + 12 = 20 (left: 3 4 20)\n",
                    "3 * 4 = 12 (left: 12 12 8)\n",
                    "12 / 3 = 4 (left: 4 8 4)\n",
                    "8 - 3 = 5 (left: 5 12 4)\n",
                    "3 - 8 = -5 (left: -5 12 4)\n",
                    "8 - 4 = 4 (left: 4 12 3)\n",
                    "4 - 8 = -4 (left: -4 12 3)\n",
                    "3 - 4 = -1 (left: -1 12 8)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n",
                    "4 * 3 = 12 (left: 12 12 8)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n",
                    "3 * 12 = 36 (left: 36 8 4)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    20.0,
                    20.0,
                    0.001,
                    1.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 12 4)\n",
                    "3 - 8 = -5 (left: -5 12 4)\n",
                    "4 - 8 = -4 (left: -4 12 3)\n",
                    "3 - 4 = -1 (left: -1 12 8)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "12 3 8 4",
                "ys": [
                    "8 - 3 = 5 (left: 5 12 4)\n",
                    "3 - 8 = -5 (left: -5 12 4)\n",
                    "4 - 8 = -4 (left: -4 12 3)\n",
                    "3 - 4 = -1 (left: -1 12 8)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "4 - 8 = -4 (left: -4 12 3)\n-4 + 12 = 8 (left: 8 3)\n8.0 * 3.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "4 - 8 = -4 (left: -4 12 3)\n-4 + 12 = 8 (left: 8 3)\n8.0 * 3.0 = 24\n"
                ]
            }
        ],
        "idx": 86,
        "correct_num": 68
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 11 2 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 11 = 15 (left: 2 6 15)\n",
                    "11 + 4 = 15 (left: 2 6 15)\n",
                    "2 + 6 = 8 (left: 4 8 11)\n",
                    "6 + 2 = 8 (left: 4 8 11)\n",
                    "4 * 2 = 8 (left: 6 11 8)\n",
                    "4 * 11 = 44 (left: 2 6 44)\n",
                    "11 - 2 = 9 (left: 9 4 6)\n",
                    "6 - 4 = 2 (left: 2 11 2)\n",
                    "4 - 6 = -2 (left: -2 11 2)\n",
                    "11 - 4 = 7 (left: 7 2 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 4 8 11)\n",
                    "6 + 2 = 8 (left: 4 8 11)\n",
                    "4 + 11 = 15 (left: 2 6 15)\n",
                    "11 + 4 = 15 (left: 2 6 15)\n",
                    "4 * 2 = 8 (left: 6 11 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 11 2 6",
                "ys": [
                    "2 + 6 = 8 (left: 4 8 11)\n",
                    "6 + 2 = 8 (left: 4 8 11)\n",
                    "4 + 11 = 15 (left: 2 6 15)\n",
                    "11 + 4 = 15 (left: 2 6 15)\n",
                    "4 * 2 = 8 (left: 6 11 8)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [
                        "11 + 4 = 15 (left: 2 6 15)\n2 * 15 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "11 + 4 = 15 (left: 2 6 15)\n2 * 15 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                ]
            }
        ],
        "idx": 87,
        "correct_num": 69
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 8 9)\n",
                    "8 / 2 = 4 (left: 2 4 9)\n",
                    "9 + 2 = 11 (left: 11 2 8)\n",
                    "2 * 8 = 16 (left: 16 2 9)\n",
                    "8 - 2 = 6 (left: 6 2 9)\n",
                    "2 - 8 = -6 (left: -6 2 9)\n",
                    "2 * 9 = 18 (left: 18 2 8)\n",
                    "9 - 2 = 7 (left: 7 2 8)\n",
                    "2 - 9 = -7 (left: -7 2 8)\n",
                    "2 * 9 = 18 (left: 18 2 8)\n",
                    "2 + 9 = 11 (left: 11 2 8)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    20.0,
                    0.001,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    20.0,
                    0,
                    20.0
                ],
                "select_new_ys": [
                    "9 + 2 = 11 (left: 11 2 8)\n",
                    "2 - 8 = -6 (left: -6 2 9)\n",
                    "2 * 9 = 18 (left: 18 2 8)\n",
                    "2 - 9 = -7 (left: -7 2 8)\n",
                    "2 + 9 = 11 (left: 11 2 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 8 9",
                "ys": [
                    "9 + 2 = 11 (left: 11 2 8)\n",
                    "2 - 8 = -6 (left: -6 2 9)\n",
                    "2 * 9 = 18 (left: 18 2 8)\n",
                    "2 - 9 = -7 (left: -7 2 8)\n",
                    "2 + 9 = 11 (left: 11 2 8)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [
                        "2 * 9 = 18 (left: 18 2 8)\n8 - 2 = 6 (left: 6 18)\n6.0 + 18.0 = 24\n"
                    ],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "2 * 9 = 18 (left: 18 2 8)\n8 - 2 = 6 (left: 6 18)\n6.0 + 18.0 = 24\n"
                ]
            }
        ],
        "idx": 88,
        "correct_num": 70
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 7)\n",
                    "5 * 1 = 5 (left: 5 6 7)\n",
                    "6 + 1 = 7 (left: 7 5 7)\n",
                    "7 - 1 = 6 (left: 6 5 6)\n",
                    "1 - 5 = -4 (left: -4 6 7)\n",
                    "5 - 1 = 4 (left: 4 6 7)\n",
                    "1 * 7 = 7 (left: 7 5 6)\n",
                    "6 - 5 = 1 (left: 1 1 7)\n",
                    "1 + 7 = 8 (left: 8 5 6)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 6 7)\n",
                    "1 - 5 = -4 (left: -4 6 7)\n",
                    "5 * 1 = 5 (left: 5 6 7)\n",
                    "6 + 1 = 7 (left: 7 5 7)\n",
                    "7 - 1 = 6 (left: 6 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 6 7",
                "ys": [
                    "1 + 5 = 6 (left: 6 6 7)\n",
                    "1 - 5 = -4 (left: -4 6 7)\n",
                    "5 * 1 = 5 (left: 5 6 7)\n",
                    "6 + 1 = 7 (left: 7 5 7)\n",
                    "7 - 1 = 6 (left: 6 5 6)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "7 - 1 = 6 (left: 6 5 6)\n5 * 6 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "7 - 1 = 6 (left: 6 5 6)\n5 * 6 = 30 (left: 30 6)\n30.0 - 6.0 = 24\n"
                ]
            }
        ],
        "idx": 89,
        "correct_num": 71
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 13 10 11)\n",
                    "8 + 5 = 13 (left: 13 10 11)\n",
                    "10 + 8 = 18 (left: 18 5 11)\n",
                    "8 + 10 = 18 (left: 18 5 11)\n",
                    "5 * 8 = 40 (left: 10 11 40)\n",
                    "8 * 5 = 40 (left: 10 11 40)\n",
                    "10 * 8 = 80 (left: 5 11 80)\n",
                    "8 * 10 = 80 (left: 5 11 80)\n",
                    "5 - 8 = -3 (left: -3 10 11)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n",
                    "8 - 10 = -2 (left: -2 5 11)\n",
                    "11 - 8 = 3 (left: 3 5 10)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "5 - 10 = -5 (left: -5 8 11)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "5 - 11 = -6 (left: -6 8 10)\n",
                    "11 - 5 = 6 (left: 6 8 10)\n",
                    "8 - 11 = -3 (left: -3 5 10)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n",
                    "5 - 10 = -5 (left: -5 8 11)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "11 - 5 = 6 (left: 6 8 10)\n",
                    "8 - 11 = -3 (left: -3 5 10)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n",
                    "5 - 10 = -5 (left: -5 8 11)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "11 - 5 = 6 (left: 6 8 10)\n",
                    "8 - 11 = -3 (left: -3 5 10)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n",
                    "5 - 10 = -5 (left: -5 8 11)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "11 - 5 = 6 (left: 6 8 10)\n",
                    "8 - 11 = -3 (left: -3 5 10)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n",
                    "5 - 10 = -5 (left: -5 8 11)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "11 - 5 = 6 (left: 6 8 10)\n",
                    "8 - 11 = -3 (left: -3 5 10)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 - 8 = -3 (left: -3 10 11)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "5 - 10 = -5 (left: -5 8 11)\n",
                    "5 - 11 = -6 (left: -6 8 10)\n",
                    "5 + 8 = 13 (left: 13 10 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 10 11",
                "ys": [
                    "5 - 8 = -3 (left: -3 10 11)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "5 - 10 = -5 (left: -5 8 11)\n",
                    "5 - 11 = -6 (left: -6 8 10)\n",
                    "5 + 8 = 13 (left: 13 10 11)\n"
                ],
                "new_ys": [
                    [
                        "5 - 8 = -3 (left: -3 10 11)\n11 - (-3) = 14 (left: 14 10)\n14.0 + 10.0 = 24\n"
                    ],
                    [],
                    [],
                    [
                        "5 - 11 = -6 (left: -6 8 10)\n8 + 10 = 18 (left: 18 -6)\n18.0 - -6.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "5 - 8 = -3 (left: -3 10 11)\n11 - (-3) = 14 (left: 14 10)\n14.0 + 10.0 = 24\n"
                ]
            }
        ],
        "idx": 90,
        "correct_num": 72
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 8 9 12)\n",
                    "12 + 4 = 16 (left: 16 4 9)\n",
                    "4 * 9 = 36 (left: 36 4 12)\n",
                    "4 - 9 = -5 (left: -5 4 12)\n",
                    "9 - 4 = 5 (left: 5 4 12)\n",
                    "12 - 4 = 8 (left: 8 4 9)\n",
                    "12 / 4 = 3 (left: 3 4 9)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "4 - 9 = -5 (left: -5 4 12)\n",
                    "4 + 4 = 8 (left: 8 9 12)\n",
                    "12 + 4 = 16 (left: 16 4 9)\n",
                    "4 * 9 = 36 (left: 36 4 12)\n",
                    "9 - 4 = 5 (left: 5 4 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 9 12",
                "ys": [
                    "4 - 9 = -5 (left: -5 4 12)\n",
                    "4 + 4 = 8 (left: 8 9 12)\n",
                    "12 + 4 = 16 (left: 16 4 9)\n",
                    "4 * 9 = 36 (left: 36 4 12)\n",
                    "9 - 4 = 5 (left: 5 4 12)\n"
                ],
                "new_ys": [
                    [],
                    [
                        "4 + 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                    ],
                    [],
                    [],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "4 + 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3.0 * 8.0 = 24\n"
                ]
            }
        ],
        "idx": 91,
        "correct_num": 73
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 9 12)\n",
                    "9 - 2 = 7 (left: 7 4 12)\n",
                    "12 / 2 = 6 (left: 6 4 9)\n",
                    "2 * 9 = 18 (left: 18 4 12)\n",
                    "4 * 2 = 8 (left: 8 9 12)\n",
                    "12 - 4 = 8 (left: 8 2 9)\n",
                    "9 - 4 = 5 (left: 5 2 12)\n",
                    "12 - 9 = 3 (left: 3 2 4)\n",
                    "2 - 12 = -10 (left: -10 4 9)\n",
                    "9 - 12 = -3 (left: -3 2 4)\n",
                    "2 * 12 = 24 (left: 24 4 9)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 7 4 12)\n",
                    "2 - 12 = -10 (left: -10 4 9)\n",
                    "2 + 4 = 6 (left: 6 9 12)\n",
                    "12 / 2 = 6 (left: 6 4 9)\n",
                    "2 * 9 = 18 (left: 18 4 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 9 12",
                "ys": [
                    "9 - 2 = 7 (left: 7 4 12)\n",
                    "2 - 12 = -10 (left: -10 4 9)\n",
                    "2 + 4 = 6 (left: 6 9 12)\n",
                    "12 / 2 = 6 (left: 6 4 9)\n",
                    "2 * 9 = 18 (left: 18 4 12)\n"
                ],
                "new_ys": [
                    [],
                    [],
                    [],
                    [],
                    [
                        "2 * 9 = 18 (left: 18 4 12)\n18 - 12 = 6 (left: 6 4)\n6.0 * 4.0 = 24\n"
                    ]
                ],
                "values": 20,
                "select_new_ys": [
                    "2 * 9 = 18 (left: 18 4 12)\n18 - 12 = 6 (left: 6 4)\n6.0 * 4.0 = 24\n"
                ]
            }
        ],
        "idx": 92,
        "correct_num": 74
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "13 8 11 4",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 + 8 = 21 (left: 21 11 4)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "13 + 8 = 21 (left: 21 11 4)\n"
                ]
            }
        ],
        "idx": 93,
        "correct_num": 74
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 13 10 13)\n",
                    "13 + 4 = 17 (left: 17 9 10)\n",
                    "10 + 9 = 19 (left: 19 4 13)\n",
                    "4 - 10 = -6 (left: -6 9 13)\n",
                    "10 - 4 = 6 (left: 6 9 13)\n",
                    "13 - 10 = 3 (left: 3 4 9)\n",
                    "4 * 10 = 40 (left: 40 9 13)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "4 - 10 = -6 (left: -6 9 13)\n",
                    "13 + 4 = 17 (left: 17 9 10)\n",
                    "10 + 9 = 19 (left: 19 4 13)\n",
                    "10 - 4 = 6 (left: 6 9 13)\n",
                    "13 - 10 = 3 (left: 3 4 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 10 13",
                "ys": [
                    "4 - 10 = -6 (left: -6 9 13)\n",
                    "13 + 4 = 17 (left: 17 9 10)\n",
                    "10 + 9 = 19 (left: 19 4 13)\n",
                    "10 - 4 = 6 (left: 6 9 13)\n",
                    "13 - 10 = 3 (left: 3 4 9)\n"
                ],
                "new_ys": [
                    [
                        "4 - 10 = -6 (left: -6 9 13)\n9 - 13 = -4 (left: -4 -6)\n-4.0 * -6.0 = 24\n"
                    ],
                    [],
                    [],
                    [
                        "10 - 4 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4.0 * 6.0 = 24\n"
                    ],
                    []
                ],
                "values": 20,
                "select_new_ys": [
                    "4 - 10 = -6 (left: -6 9 13)\n9 - 13 = -4 (left: -4 -6)\n-4.0 * -6.0 = 24\n"
                ]
            }
        ],
        "idx": 94,
        "correct_num": 75
    }
]